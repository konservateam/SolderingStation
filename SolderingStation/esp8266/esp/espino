#include <ESP8266WiFi.h> 
#include <WiFiClient.h> 
#include <ESP8266WebServer.h> 

const char* ssid = "skyNet"; // Указываем имя существующей точки доступа
const char* password = "Orient78"; // Указываем пароль существующей точки доступа

ESP8266WebServer server(80);

void handleRoot() { // Обработчик запроса клиента по корневому адресу
  // Отправляем клиенту
  server.send(200, "text/plain", "Привет всем! ESP8266!");
}

void handleNotFound() { // Обрабатываем небезызвестную ошибку 404
  String message = "File Not Found\n\n";
  message += "URI: ";
  message += server.uri();
  message += "\nMethod: ";
  message += (server.method() == HTTP_GET) ? "GET" : "POST";
  message += "\nArguments: ";
  message += server.args();
  message += "\n";
  for (uint8_t i = 0; i < server.args(); i++) {
    message += " " + server.argName(i) + ": " + server.arg(i) + "\n";
  }
  server.send(404, "text/plain", message);
}

void setup(void) {
  Serial.begin(115200);

  WiFi.mode(WIFI_STA); // Устанавливаем Wi-Fi модуль в режим клиента (STA)
  WiFi.begin(ssid, password); // Устанавливаем ssid и пароль от сети, подключаемся
  
  while (WiFi.status() != WL_CONNECTED) { // Ожидаем подключения к Wi-Fi
    delay(500);
    Serial.print(".");
  }
  
  // Выводим информацию о подключении
  Serial.println("");
  Serial.print("Подключено к ");
  Serial.println(ssid);
  Serial.print("IP адрес: ");
  Serial.println(WiFi.localIP());

  // Устанавливаем обработчики. Можно сделать двумя способами:
  server.on("/", handleRoot);

  server.on("/inline", []() {
    server.send(200, "text/plain", "Отличная работа!");
  });

  server.onNotFound(handleNotFound); // Вызывается, когда обработчик не назначен

  // Запускаем сервер
  server.begin();
  Serial.println("HTTP-сервер запущен");
}

void loop(void) {
  server.handleClient();
}

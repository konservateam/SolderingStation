; v. 12.02.2017 (добавлена возможность пропуска термопрофиля, пока температура не достигнет заданного значения до которого нагрета плата, убран с экрана лишний символ С при запуске термопрофиля)
; v. 10.12.2017 (устранение бага, связанного с невозможностью пропуска термопрофиля при автоматическом режиме работы нижнего нагревателя)
           LIST      p=16f876
            #include  <P16F876.inc>
            errorlevel	-302		  ;Отключаем сообщения переключения банков 
            __CONFIG  (_LVP_OFF & _CP_OFF & _CPD_OFF & _PWRTE_ON & _WDT_ON & _HS_OSC & _BODEN_ON & _DEBUG_OFF )

cblock      0x20 
TEMPS                                 ; используем для хранения меток флагов
W_TEMP                                ; временный регистр - дубликат W
ST_TEMP                               ; временный регистр - дубликат STATUS
LCD_tmp                               ; временный регистр для вывода данных на LCD
LCD_tmp1                              ; -//-
Reg_tmp_WR                            ; используем в ПП задержки для обновления EEPROM
Reg_tmp_TMR                           ; используем в ПП секундомера
Reg_tmp1                              ; временные регистры для ПП задержек
Reg_tmp2                              ; -//-
Reg_tmp3                              ; -//-
Reg_tmp4                              ; временные регистры для задержек ПП секундомера
Reg_tmp5                              ; -//-
Reg_1                                 ; временные регистры для задержек в ПП обработки данных с энкодера
Reg_2                                 ; -//-
Reg_3                                 ; -//-
Reg_4                                 ; тут храним шаблон для сравнения с нулевым результатом и подменой пустым знакоместом
Reg_tmpL                              ; сюда переносим данные перед трансформацией двоичного числа в десятичное
Reg_tmpH                              ; -//-
Reg_T_USTh                            ; временный регистр для хранения уставок температуры верхнего нагревателя
Reg_T_USTl                            ; временный регистр для хранения уставок температуры нижнего нагревателя
Reg_T_TEMPh                           ; временный регистр для хранения уставок выходной мощности верхнего нагревателя
Reg_T_TEMPl                           ; временный регистр для хранения уставок выходной мощности нижнего нагревателя
Reg_T_TEMPll                          ; временный регистр для хранения уставок максимальной выходной мощности нижнего нагревателя для автоматического режима работы
Reg_T_TEMPhh                          ; временный регистр для хранения уставок максимальной выходной мощности верхнего нагревателя для автоматического режима работы
ctr                                   ; временные регистры в ПП конвертации двоичного числа в десятичное
bcd1                                  ; -//-
bcd2                                  ; -//-
bcd3                                  ; -//-
bin1                                  ; -//-
bin2                                  ; -//-
TenK                                  ; десятки тысяч
Thou                                  ; тысячи
Hund                                  ; сотни
Tens                                  ; десятки
Ones                                  ; единицы
; в следующих регистрах храним
Reg_tmp_PR                            ; используем для хранения номера программы
kursor                                ; используем для хранения местоположения курсора
Temmp                                 ; используем для хранения уставок вкл_откл, руч_авт для верхних и нижних нагревателей
T_h                                   ; здесь храним уставку температуры верхнего нагревателя для автоматического режима работы
P_h                                   ; здесь храним уставку мощности верхнего нагревателя для ручного режима работы
T_l                                   ; здесь храним уставку температуры нижнего нагревателя для автоматического режима работы
P_l                                   ; здесь храним уставку мощности нижнего нагревателя для ручного режима работы
endc      


#define TMP             .244          ; уставка значения времени задержки между изменениями настроек и их записью в EEPROM (3 секунды)
#define DAT_ENC         PORTB,4       ; назначаем порт для ввода данных с энкодера
#define CLK_ENC         PORTB,5       ; назначаем порт для ввода тактирующих импульсов с энкодера
#define ON_OFF_ENC      PORTB,0       ; назначаем порт для кнопки энкодера
#define RS_LCD          LCD_tmp1,1    ; назначаем вывод команд RS для LCD
#define E_LCD           LCD_tmp1,0    ; назначаем вывод команд E для LCD
#define D7_1        bsf PORTC,4       ; назначаем порты для вывода данных на LCD
#define D7_0        bcf PORTC,4       ; -//-
#define D6_1        bsf PORTC,5       ; -//-
#define D6_0        bcf PORTC,5       ; -//-
#define D5_1        bsf PORTC,6       ; -//-
#define D5_0        bcf PORTC,6       ; -//-
#define D4_1        bsf PORTC,7       ; -//-
#define D4_0        bcf PORTC,7       ; -//-
#define D3_1        bsf PORTB,1       ; -//-
#define D3_0        bcf PORTB,1       ; -//-
#define D2_1        bsf PORTB,2       ; -//-
#define D2_0        bcf PORTB,2       ; -//-
#define D1_1        bsf PORTB,3       ; -//-
#define D1_0        bcf PORTB,3       ; -//-
#define D0_1        bsf PORTB,6       ; -//-
#define D0_0        bcf PORTB,6       ; -//-
#define ON_OFF_ENC_F    TEMPS,7       ; используем для установок флага нажатия кнопки (1-зафиксировано нажатие кнопки энкодера, 0-нажатия не было)
#define INC_F           TEMPS,6       ; используем для установок флага поворота энкодера (1-зафиксирован поворот энкодера, 0-поворота не было)
#define W_R             TEMPS,5       ; используем для установок флага записи в EEPROM (1-нужно обновить EEPROM, 0-обновление не требуется)
#define SERV_UST_l      TEMPS,4       ; используем для установок флага необходимости ввода сервисной уставки для нижнего нагревателя (1-нужно обновить уставку, 0-обновление не требуется)
#define SERV_UST_h      TEMPS,3       ; используем для установок флага необходимости ввода сервисной уставки для верхнего нагревателя (1-нужно обновить уставку, 0-обновление не требуется)
#define SEC_PAUS        TEMPS,2       ; используем для установок флага необходимости паузы термопрофиля, если нет прогрева до заданной температуры (1-нужна пауза, 0-пауза не требуется)
#define KURSOR          TEMPS,1       ; используем для установок флага фиксации курсора (1-курсор не зафиксирован, 0-курсор зафиксирован)
#define PROPUSK         TEMPS,0       ; 999 используем для установок флага необходимости пропуска термопрофиля, пока температура не достигнет заданного значения до которого нагрета плата (1-температура не достигла заданного значения, 0-температура достигла заданного значения)
#define BEEP_ON     bcf PORTA,4       ; назначаем вывод для управления зуммером
#define BEEP_OFF    bsf PORTA,4       ; назначаем вывод для управления зуммером
#define ON_OFF_H        Temmp,0       ; используем для установок вкл_откл верхнего нагревателя (1-нагреватель включен, 0-нагреватель выключен)
#define ON_OFF_L        Temmp,1       ; используем для установок вкл_откл нижнего нагревателя (1-нагреватель включен, 0-нагреватель выключен)
#define AV_R_H          Temmp,2       ; используем для установок авт_руч верхнего нагревателя (1-автоматический режим, 0-ручной режим)
#define AV_R_L          Temmp,3       ; используем для установок авт_руч нижнего нагревателя (1-автоматический режим, 0-ручной режим)



            org         2100h         ; На стадии "прошивки", записываем в EEPROM-ячейку,
            de          .1            ; с адресом 00h, число 1
            org         2101h         ; На стадии "прошивки", записываем в EEPROM-ячейку,
            de          .1            ; с адресом 01h, число 1 (местоположение курсора)
            org         2102h         ; На стадии "прошивки", записываем в EEPROM-ячейку,
            de          .0            ; с адресом 02h, число 0
            org         2103h         ; На стадии "прошивки", записываем в EEPROM-ячейку,
            de          .100          ; с адресом 03h, число 100 (предустановленная температура для верхнего нагревателя для автоматического режима работы)
            org         2104h         ; На стадии "прошивки", записываем в EEPROM-ячейку,
            de          .50           ; с адресом 04h, число 50 (предустановленная мощность в % для верхнего нагревателя для ручного режима работы)
            org         2105h         ; На стадии "прошивки", записываем в EEPROM-ячейку,
            de          .100          ; с адресом 05h, число 100 (предустановленная температура для нижнего нагревателя для автоматического режима работы)
            org         2106h         ; На стадии "прошивки", записываем в EEPROM-ячейку,
            de          .50           ; с адресом 06h, число 50 (предустановленная мощность в % для нижнего нагревателя для ручного режима работы)
            org         2107h         ; На стадии "прошивки", записываем в EEPROM-ячейку,
            de          .20           ; с адресом 07h, число 20 (предустановленная максимальная мощность в % для нижнего нагревателя для автоматического режима работы)
            org         2108h         ; На стадии "прошивки", записываем в EEPROM-ячейку,
            de          .99           ; с адресом 08h, число 99 (предустановленная максимальная мощность в % для верхнего нагревателя для автоматического режима работы)


                           ;;;;;;;;;;;;;;;;;;;
                           ; старт программы;
                           ;;;;;;;;;;;;;;;;;;;
            org         0
            goto        START 

                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                           ; подпрограмма приема данных с энкодера;
                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; если мы попали сюда -> было сгенерировано прерывание по изменению состояния на входах RB4, RB5, RB6, RB7, INT
            ORG         4h            ; адрес вектора прерывания 
            bsf         W_R           ; ставим флаг необходимости обновления EEPROM
            movlw       TMP           ; вводим константу для 3 секундной задержки перед записью в EEPROM (после изменения настроек)
            movwf       Reg_tmp_WR    ; -//- 
            movwf       W_TEMP        ; копируем W в регистр - дубликат
            movf        STATUS,W      ; копируем STATUS в W 
            movwf       ST_TEMP       ; копируем W в регистр - дубликат
            movf        PORTB, W      ; производим чтение порта B для исключения несоответствия
            bcf         INTCON, RBIF  ; сбрасываем флаг RBIF
            bcf         INTCON, INTF  ; сбрасываем флаг INTF
            btfss       ON_OFF_ENC    ; опрашиваем кнопку энкодера
            goto        button        ; отправляемся ставить метку о срабатывании кнопки
            bsf         INC_F         ; устанавливаем флаг о повороте энкодера
            goto        ENDS          ; выходим из прерывания
button      bsf         ON_OFF_ENC_F  ; устанавливаем флаг о срабатывании кнопки
ENDS        movf        ST_TEMP,W     ; возвращаем прежние значения в STATUS и W
            movwf       STATUS        ; -//-
            swapf       W_TEMP,f      ; -//-
            swapf       W_TEMP,W      ; -//-
            retfie                    ; возврат из прерывания GIE устанавливается в 1  

; таблица символов для дисплея HD44780
TABL_dig    andlw       b'00001111'   ; маскируем старший полубайт W (обнуляем 4 старших байта)
            addwf       PCL,f         ; содержимое счетчика команд PC увеличивается на величину содержимого аккумулятора W
            retlw       0x30          ; 0
            retlw       0x31          ; 1 
            retlw       0x32          ; 2 
            retlw       0x33          ; 3 
            retlw       0x34          ; 4 
            retlw       0x35          ; 5  
            retlw       0x36          ; 6 
            retlw       0x37          ; 7 
            retlw       0x38          ; 8 
            retlw       0x39          ; 9
            retlw       0x41          ; A
            retlw       0x42          ; B
            retlw       0x43          ; C
            retlw       0x44          ; D
            retlw       0x45          ; E
            retlw       0x46          ; F

; выводим информацию о термопрофиле
PR_info     andlw       b'00001111'   ; маскируем старший полубайт W (обнуляем 4 старших байта)
            addwf       PCL,f         ; содержимое счетчика команд PC увеличивается на величину содержимого аккумулятора W
            nop
            goto        T_PROF_1      ; 1 термопрофиль
            goto        T_PROF_2      ; 2 термопрофиль
            goto        T_PROF_3      ; 3 термопрофиль
            goto        T_PROF_4      ; 4 термопрофиль
            goto        T_PROF_5      ; 5 термопрофиль
            goto        T_PROF_6      ; 6 термопрофиль
            goto        T_PROF_7      ; 7 термопрофиль
            goto        T_PROF_8      ; 8 термопрофиль
            goto        T_PROF_9      ; 9 термопрофиль
            goto        T_PROF_10     ; 10 термопрофиль
            goto        T_PROF_11     ; 11 термопрофиль
            goto        T_PROF_12     ; 12 термопрофиль
            goto        T_PROF_13     ; 13 термопрофиль
            goto        T_PROF_14     ; 14 термопрофиль

                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                           ; подготовительные операции;
                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
START       bcf         STATUS,RP0    ; переход в банк 0
            banksel     OPTION_REG    ; переходим в регистр OPTION_REG
            movlw       b'00001101'   ; включаем подтягивающие резисторы PORTB, включаем предделитель перед WDT 1:32
            movwf       OPTION_REG    ; -//-
            banksel     INTCON        ; переходим в регистр INTCON
            movlw       b'00011000'   ; глобальный запрет прерываний, разрешение прерываний по изменению сигнала на входах RB4 - RB7, INT
            movwf       INTCON        ; -//-
            banksel     PIE1          ; переходим в регистр PIE1
            movlw       b'00000000'   ; глобальный запрет периферийных прерываний
            movwf       PIE1          ; -//-
            banksel     TRISA         ; переходим в регистр PORTA
            movlw       b'00101100'   ; настраиваем RA2, RA3, RA5 на вход, остальные на выход
            movwf       TRISA         ; -//-
            banksel     TRISB         ; переходим в регистр PORTB
            movlw       b'00110001'   ; настраиваем все порты на выход, RB4, RB5, RB0 на вход
            movwf       TRISB         ; -//-
            banksel     TRISC         ; переходим в регистр PORTC
            movlw       b'00000001'   ; настраиваем все порты на выход, RC0 на вход
            movwf       TRISC         ; -//-
            banksel     T1CON         ; переходим в регистр T1CON
            movlw       b'00000000'   ; отключаем модуль T1CON
            movwf       T1CON         ; -//-
            banksel     T2CON         ; переходим в регистр T2CON
            movlw       b'00000110'   ; включаем модуль T2CON, коэффициент деления предделителя TMR2 1:16
            movwf       T2CON         ; -//-
            banksel     CCP1CON       ; переходим в регистр CCP1CON
            movlw       b'00001100'   ; включаем модуль CCP1
            movwf       CCP1CON       ; -//-
            banksel     CCP2CON       ; переходим в регистр CCP2CON
            movlw       b'00001100'   ; включаем модуль CCP2
            movwf       CCP2CON       ; -//-
            banksel     PR2           ; переходим в регистр PR2
            movlw       b'01100010'   ; период для ШИМ        
            movwf       PR2           ; -//-
            banksel     SSPSTAT       ; переходим в регистр SSPSTAT
            movlw       b'00000000'   ; отключаем модуль SSPSTAT
            movwf       SSPSTAT       ; -//-
            banksel     SSPCON        ; переходим в регистр SSPCON
            movlw       b'00000000'   ; отключаем модуль SSPCON
            movwf       SSPCON        ; -//-
            banksel     SSPCON2       ; переходим в регистр SSPCON2
            movlw       b'00000000'   ; отключаем модуль SSPCON2
            movwf       SSPCON2       ; -//-  
            banksel     TXSTA         ; переходим в регистр TXSTA
            movlw       b'00000000'   ; отключаем модуль TXSTA
            movwf       TXSTA         ; -//-  
            banksel     RCSTA         ; переходим в регистр RCSTA
            movlw       b'00000000'   ; отключаем модуль RCSTA
            movwf       RCSTA         ; -//- 
            banksel     ADCON0        ; переходим в регистр ADCON0
            movlw       b'00000000'   ; отключаем модуль АЦП
            movwf       ADCON0        ; -//- 
            banksel     ADCON1        ; переходим в регистр ADCON1
            movlw       b'00000000'   ; отключаем модуль АЦП
            movwf       ADCON1        ; -//- 
            bcf         STATUS,RP0    ; переход в банк 0

            call        OFFh          ; отключаем верхний нагреватель
            call        OFFl          ; отключаем нижний нагреватель 

                           ;;;;;;;;;;;;;;;;;;;;;;;;;
                           ; инициализация дисплея;
                           ;;;;;;;;;;;;;;;;;;;;;;;;;
            call        del_100ms     ; начальная задержка 100 миллисекунд 
            movlw       b'00000001'   ; очищаем дисплей
            call        LCD_com       ; -//-
            call        del_5ms
            movlw       b'00000110'   ; сдвиг курсора вправо
            call        LCD_com       ; -//-   
            movlw       b'00001100'   ; отключаем курсор
            call        LCD_com       ; -//-   
            movlw       b'00010100'   ; двигаем курсор вправо
            call        LCD_com       ; -//-  
            movlw       b'00111000'   ; вкл 8 разрядный ввод данных, размер символа 5х8 символов
            call        LCD_com       ; -//-  
; 555 Англификация дисплея 2004
; 666 Изменение положения надписей при англификации дисплея
; 777 Ввод самодельных символов в знакогенератор
; 888 Исправление ошибки включения контроллера с отжатой кнопкой энкодера
; 999 Работа термопрофиля от темпратуры нижнего нагревателя
            movlw       b'01000000'   ; устанавливаем начальный адрес CGRAM 777
            call        LCD_com       ; -//-  777
; Символ стрелка вверх
            movlw       0x04          ; 1 символ 1 строка 
            call        LCD_dig       ; загружаем данные
            movlw       0x0E          ; 1 символ 2 строка 
            call        LCD_dig       ; загружаем данные
            movlw       0x15          ; 1 символ 3 строка 
            call        LCD_dig       ; загружаем данные
            movlw       0x04          ; 1 символ 4 строка 
            call        LCD_dig       ; загружаем данные
            movlw       0x04          ; 1 символ 5 строка 
            call        LCD_dig       ; загружаем данные
            movlw       0x04          ; 1 символ 6 строка 
            call        LCD_dig       ; загружаем данные
            movlw       0x04          ; 1 символ 7 строка 
            call        LCD_dig       ; загружаем данные
            movlw       0x00          ; 1 символ 8 строка 
            call        LCD_dig       ; загружаем данные
; Символ стрелка вниз
            movlw       0x04          ; 2 символ 1 строка 
            call        LCD_dig       ; загружаем данные
            movlw       0x04          ; 2 символ 2 строка 
            call        LCD_dig       ; загружаем данные
            movlw       0x04          ; 2 символ 3 строка 
            call        LCD_dig       ; загружаем данные
            movlw       0x04          ; 2 символ 4 строка 
            call        LCD_dig       ; загружаем данные
            movlw       0x15          ; 2 символ 5 строка 
            call        LCD_dig       ; загружаем данные
            movlw       0x0E          ; 2 символ 6 строка 
            call        LCD_dig       ; загружаем данные
            movlw       0x04          ; 2 символ 7 строка 
            call        LCD_dig       ; загружаем данные
            movlw       0x00          ; 2 символ 8 строка 
            call        LCD_dig       ; загружаем данные
; Символ градус цельсия
            movlw       0x18          ; 3 символ 1 строка 
            call        LCD_dig       ; загружаем данные
            movlw       0x18          ; 3 символ 2 строка 
            call        LCD_dig       ; загружаем данные
            movlw       0x00          ; 3 символ 3 строка 
            call        LCD_dig       ; загружаем данные
            movlw       0x07          ; 3 символ 4 строка 
            call        LCD_dig       ; загружаем данные
            movlw       0x08          ; 3 символ 5 строка 
            call        LCD_dig       ; загружаем данные
            movlw       0x08          ; 3 символ 6 строка 
            call        LCD_dig       ; загружаем данные
            movlw       0x07          ; 3 символ 7 строка 
            call        LCD_dig       ; загружаем данные
            movlw       0x00          ; 3 символ 8 строка 
            call        LCD_dig       ; загружаем данные


            bcf         KURSOR        ; фиксируем курсор
            btfss       ON_OFF_ENC    ; опрашиваем кнопку энкодера (проверяем необходимость ввода сервисных уставок)
            call        UST_Pl_max    ; пропускаем, если кнопка энкодера отжата

            clrf        Reg_T_TEMPl   ; очищаем Reg_T_TEMPl
            bcf         W_R           ; опускаем флаг W_R
            bcf         INC_F         ; сбрасываем флаг о повороте энкодера
            bcf         ON_OFF_ENC_F  ; сбрасываем флаг нажатия кнопки
            call        BEEP          ; звуковой сигнал после включения устройства
            call        READ_EEP      ; читаем все уставки из EEPROM

            bcf         STATUS, Z     ; сбрасываем флаг Z
            movlw       0x00          ; загружаем шаблон 0 для проверки регистра хранения местоположения курсора
            xorwf       kursor,W      ; сравниваем с регистром kursor
            btfsc       STATUS, Z     ; проверяем состояние флага Z, пропускаем если 0 (1=совпали данные)
            call        kursor_1      ; устанавливаем курсор вновь, если регистр kursor обнулился (для устранения глюка с исчезновением курсора)

            bcf         SERV_UST_l    ; опускаем флаг необходимости ввода сервисной уставки для нижнего нагревателя
            bcf         SERV_UST_h    ; опускаем флаг необходимости ввода сервисной уставки для верхнего нагревателя   888
Go          call        BEEP          ; звуковой сигнал после включения устройства
            call        Symbol        ; расставляем символы на дисплее

            btfsc       AV_R_H        ; проверяем флаг AV_R_H, и выводим на дисплей ручной или автоматический режим работы верхнего нагревателя
            call        ABTh          ; -//- 666 
            btfss       AV_R_H        ; -//-  
            call        RUCHh         ; -//- 666 

            btfsc       AV_R_L        ; проверяем флаг AV_R_L, и выводим на дисплей ручной или автоматический режим работы нижнего нагревателя
            call        ABTl          ; -//- 666 
            btfss       AV_R_L        ; -//-  
            call        RUCHl         ; -//- 666 

            btfsc       ON_OFF_H      ; проверяем флаг ON_OFF_H, и выводим на дисплей надпись ВКЛ или ВЫКЛ (так же включаем или отключаем верхний нагреватель)
            call        ONh           ; -//- 666 
            btfss       ON_OFF_H      ; -//-  
            call        OFFh          ; -//- 666 

           btfsc       ON_OFF_L      ; проверяем флаг ON_OFF_L, и выводим на дисплей надпись ВКЛ или ВЫКЛ (так же включаем или отключаем нижний нагреватель)
            call        ONl           ; -//- 666 
            btfss       ON_OFF_L      ; -//-  
            call        OFFl          ; -//- 666 

            call        T_PROF        ; выводим надпись термопрофиль 666
            call        OUTPUT_PR     ; выводим на дисплей номер термопрофиля 666
            call        kursor_OUT    ; выставляем курсор 666

            call        OFF_PR        ; выводим надпись СТОП напротив ТЕРМОПРОФИЛЬ 666


Goo         bcf         SEC_PAUS      ; опускаем флаг необходимости паузы термопрофиля
            movf        PORTB, W      ; производим чтение порта B для исключения несоответствия
            clrwdt
            btfsc       AV_R_H        ; проверяем флаг AV_R_H (ручной или автоматический режим работы верхнего нагревателя)
            call        T_READ_h      ; коррекция мощности верхнего нагревателя по предустановке температуры, если включен автоматический режим работы для верхнего нагревателя
            btfsc       AV_R_L        ; проверяем флаг AV_R_L (ручной или автоматический режим работы нижнего нагревателя)
            call        T_READ_l      ; коррекция мощности нижнего нагревателя по предустановке температуры, если включен автоматический режим работы для нижнего нагревателя
            bsf         INTCON, GIE   ; разрешаем прерывания
            call        OUT_T_h       ; выводим на дисплей температуру верхней термопары 666
            call        OUT_T_l       ; выводим на дисплей температуру нижней термопары 666
            btfsc       INC_F         ; проверяем флаг поворота энкодера
            call        ENC           ; идем обрабатывать данные с энкодера, если флаг INC_F поднят
            bsf         INTCON, GIE   ; разрешаем прерывания
            btfsc       ON_OFF_ENC_F  ; проверяем флаг нажатия кнопки
            call        Button        ; идем обрабатывать данные с кнопки, если флаг ON_OFF_ENC_F поднят 
            bsf         INTCON, GIE   ; разрешаем прерывания
            btfss       W_R           ; проверяем флаг W_R
            goto        Goo           ; переход сюда если флаг опущен (не требуется обновление EEPROM)
            decfsz      Reg_tmp_WR,F  ; пропускаем следующую команду, если вышло время ожидания (3 секунды) перед обновлением EEPROM
            goto        Goo
            bcf         INTCON, GIE   ; запрещаем прерывания
            bcf         W_R           ; опускаем флаг W_R
;           call        BEEP          ; звуковой сигнал перед записью в EEPROM
            call        WRITE_EEP     ; записываем все уставки в EEPROM
            bcf         KURSOR        ; сбрасываем флаг фиксации курсора (фиксируем курсор, если фиксация не была произведена самостоятельно в течении 3 сек)
            movlw       0xD4          ; курсор в пределах четвертой строки ( 0xD4 - начало )
            call        LCD_com       ; загружаем команду 666
            call        simb_pust     ; пустое знакоместо 666
            goto        Goo
         

                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                           ; Подпрограмма обработки данных с энкодера ;
                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
ENC         bcf         INTCON, GIE   ; запрещаем прерывания
            movlw       .51           ; вводим константы ожидания приема данных 0 на CLK_ENC (150ms)
            movwf       Reg_1         ; -//- 
            movlw       .12           ; -//- 
            movwf       Reg_2         ; -//-
            movlw       .4            ; -//- 
            movwf       Reg_3         ; -//-  
ers         btfsc       CLK_ENC       ; опрашиваем тактовый вход энкодера
            goto        READ_ENC      ; уходим считывать данные, если на тактовом входе 1
            decfsz      Reg_1, F
            goto        ers
            clrwdt
            decfsz      Reg_2, F
            goto        ers
            decfsz      Reg_3, F
            goto        ers
            bcf         INC_F         ; сброс флага поворота энкоера
            bsf         INTCON, GIE   ; разрешаем прерывания
            return                    ; уходим из ПП если закончилось время ожидания приема данных (150ms) (не дождались 1 (на энкодере висит постоянно 0))

READ_ENC    call        del_1ms       ; необходимо для устранения дребезга
            movlw       .51           ; вводим константы ожидания приема данных 0 на CLK_ENC (150ms)
            movwf       Reg_1         ; -//- 
            movlw       .12           ; -//- 
            movwf       Reg_2         ; -//-
            movlw       .4            ; -//- 
            movwf       Reg_3         ; -//- 
rew         btfss       CLK_ENC       ; опрашиваем тактовый вход энкодера
            goto        READY         ; уходим считывать данные, если на тактовом входе 0
            decfsz      Reg_1, F
            goto        rew
            clrwdt
            decfsz      Reg_2, F
            goto        rew
            decfsz      Reg_3, F
            goto        rew
            bcf         INC_F         ; сброс флага поворота энкоера
            bsf         INTCON, GIE   ; разрешаем прерывания
            return                    ; уходим из ПП если закончилось время ожидания приема данных (150ms) (не дождались 0)

; проверяем местоположение метки, и меняем соответствующую уставку
READY       
            btfsc       KURSOR        ; проверяем флаг KURSOR
            goto        kursor_UST    ; меняем местоположение курсора
            btfsc       SERV_UST_l    ; проверяем флаг SERV_UST_l
            goto        UST_Pmaxl     ; вводим уставку максимальной мощности для автоматического режима работы нижнего нагревателя
            btfsc       SERV_UST_h    ; проверяем флаг SERV_UST_h
            goto        UST_Pmaxh     ; вводим уставку максимальной мощности для автоматического режима работы верхнего нагревателя
            btfsc       kursor, 0     ; проверяем 0 бит
            goto        AVTTh         ; меняем уставку автоматический - ручной режим работы для верхнего нагревателя
            btfsc       kursor, 1     ; проверяем 1 бит 
            goto        T_Ph          ; меняем уставку ввод поддерживаемой температуры или мощности верхнего нагревателя
            btfsc       kursor, 2     ; проверяем 2 бит 
            goto        ONOFFh        ; меняем уставку включен - отключен верхний нагреватель
            btfsc       kursor, 3     ; проверяем 3 бит 
            goto        AVTTl         ; меняем уставку автоматический - ручной режим работы для нижнего нагревателя
            btfsc       kursor, 4     ; проверяем 4 бит 
            goto        T_Pl          ; меняем уставку ввод поддерживаемой температуры или мощности нижнего нагревателя
            btfsc       kursor, 5     ; проверяем 5 бит 
            goto        ONOFFl        ; меняем уставку включен - отключен нижний нагреватель
            btfsc       kursor, 6     ; проверяем 6 бит 
            goto        PRR           ; меняем уставку номера термопрофиля

kursor_UST  btfsc       DAT_ENC       ; читаем данные с энкодера и меняем местоположение курсора
            goto        kursor_UP     ; -//- 
            btfss       DAT_ENC       ; -//- 
            goto        kursor_DOWN   ; -//- 

kursor_UP   bcf         STATUS, C     ; сбрасываем флаг С (необходимо для устранения глюка) 
            btfsc       kursor, 6     ; проверяем 6 бит 
            goto        kursor_6      ; пропускаем если 0, если 1 - оставляем курсор на 7 местоположении
            rlf         kursor, F     ; циклический сдвиг влево местоположения курсора
            goto        kursor_OUT    ; выводим местоположение курсора
kursor_6    movlw       b'01000000'   ; оставляем курсор на 7 местоположении
            movwf       kursor        ; -//-
            goto        kursor_OUT    ; обновляем местоположение курсора

kursor_DOWN bcf         STATUS, C     ; сбрасываем флаг С (необходимо для устранения глюка) 
            btfsc       kursor, 0     ; проверяем 0 бит 
            goto        kursor_1      ; пропускаем если 0, если 1 - оставляем курсор на 1 местоположении
            rrf         kursor, F     ; циклический сдвиг вправо местоположения курсора
            goto        kursor_OUT    ; выводим местоположение курсора
kursor_1    movlw       b'00000001'   ; переносим курсор в начало
            movwf       kursor        ; -//-
            goto        kursor_OUT    ; обновляем местоположение курсора

UST_Pmaxl   btfsc       DAT_ENC       ; читаем данные с энкодера и меняем уставку максимальной мощности для автоматического режима работы нижнего нагревателя(сервисная уставка)
            goto        Pmaxl_UP      ; -//- 
            btfss       DAT_ENC       ; -//- 
            goto        Pmaxl_DOWN    ; -//- 

Pmaxl_UP    bcf         STATUS, Z     ; сбрасываем флаг Z
            movlw       .99           ; загружаем шаблон для проверки предельного результата мощности 99%
            xorwf       Reg_T_TEMPll,W ; сравниваем с регистром Reg_T_TEMPll
            btfss       STATUS, Z     ; проверяем состояние флага Z, пропускаем если 1 (1=совпали данные)
            goto        Pll_UPs       ; увеличиваем установленную мощность на 1
            goto        ENC           ; уходим отсюда (ничего не делаем если результат 99)

Pmaxl_DOWN  bcf         STATUS, Z     ; сбрасываем флаг Z
            movlw       0x00          ; загружаем шаблон для проверки нижнего предела 0
            xorwf       Reg_T_TEMPll,W ; сравниваем с регистром Reg_T_TEMPll
            btfss       STATUS, Z     ; проверяем состояние флага Z, пропускаем если 1 (1=совпали данные)
            goto        Pll_DOWNs     ; уменьшаем установленную мощность на 1
            goto        ENC           ; уходим отсюда (ничего не делаем если результат 0)

Pll_UPs     incf        Reg_T_TEMPll,F ; увеличиваем содержимое Reg_T_TEMPll
            goto        OUTPUT_Pll    ; выводим на дисплей устанавливаемую мощность для автоматического режима работы нижнего нагревателя(сервисная уставка)

Pll_DOWNs   decf        Reg_T_TEMPll,F ; уменьшаем содержимое Reg_T_TEMPll
            goto        OUTPUT_Pll    ; выводим на дисплей устанавливаемую мощность для автоматического режима работы нижнего нагревателя(сервисная уставка)

; выводим на дисплей предустановленную мощность для автоматического режима работы нижнего нагревателя(сервисная уставка)
OUTPUT_Pll  clrf        Reg_tmpH      ; очищаем Reg_tmpH
            movf        Reg_T_TEMPll,W ; копируем в Reg_tmpL содержимое регистра Reg_T_TEMPll
            movwf       Reg_tmpL      ; -//-
            call        TRANSFORMER_dig ;
            movlw       0x85          ; 777 6          ; курсор в пределах первой строки ( 0x80 - начало ) 666
            call        LCD_com       ; загружаем команду
            movlw       0x30          ; подменяем пустым знакоместом , если первый 0 
            movwf       Reg_tmp1      ; -//-
            movf        Tens,W        ; -//-
            call        TABL_dig      ; -//- 
            xorwf       Reg_tmp1,F    ; -//-
            skpnz                     ; -//-
            movlw       0x20          ; -//-
            call        LCD_dig       ; загружаем данные 
            movf        Ones,W        ; копируем в W содержимое Ones
            call        TABL_dig      ; отправляем на дисплей содержимое Ones 
            call        LCD_dig       ; загружаем данные 
            call        simb_proc     ; % 
            return

UST_Pmaxh   btfsc       DAT_ENC       ; читаем данные с энкодера и меняем уставку максимальной мощности для автоматического режима работы верхнего нагревателя(сервисная уставка)
            goto        Pmaxh_UP      ; -//- 
            btfss       DAT_ENC       ; -//- 
            goto        Pmaxh_DOWN    ; -//- 

Pmaxh_UP    bcf         STATUS, Z     ; сбрасываем флаг Z
            movlw       .99           ; загружаем шаблон для проверки предельного результата мощности 99%
            xorwf       Reg_T_TEMPhh,W ; сравниваем с регистром Reg_T_TEMPhh
            btfss       STATUS, Z     ; проверяем состояние флага Z, пропускаем если 1 (1=совпали данные)
            goto        Phh_UPs       ; увеличиваем установленную мощность на 1
            goto        ENC           ; уходим отсюда (ничего не делаем если результат 99)

Pmaxh_DOWN  bcf         STATUS, Z     ; сбрасываем флаг Z
            movlw       0x00          ; загружаем шаблон для проверки нижнего предела 0
            xorwf       Reg_T_TEMPhh,W ; сравниваем с регистром Reg_T_TEMPhh
            btfss       STATUS, Z     ; проверяем состояние флага Z, пропускаем если 1 (1=совпали данные)
            goto        Phh_DOWNs     ; уменьшаем установленную мощность на 1
            goto        ENC           ; уходим отсюда (ничего не делаем если результат 0)

Phh_UPs     incf        Reg_T_TEMPhh,F ; увеличиваем содержимое Reg_T_TEMPhh
            goto        OUTPUT_Phh    ; выводим на дисплей устанавливаемую мощность для автоматического режима работы верхнего нагревателя(сервисная уставка)666

Phh_DOWNs   decf        Reg_T_TEMPhh,F ; уменьшаем содержимое Reg_T_TEMPhh
            goto        OUTPUT_Phh    ; выводим на дисплей устанавливаемую мощность для автоматического режима работы верхнего нагревателя(сервисная уставка)666

; выводим на дисплей предустановленную мощность для автоматического режима работы верхнего нагревателя(сервисная уставка)
OUTPUT_Phh  clrf        Reg_tmpH      ; очищаем Reg_tmpH
            movf        Reg_T_TEMPhh,W ; копируем в Reg_tmpL содержимое регистра Reg_T_TEMPhh
            movwf       Reg_tmpL      ; -//-
            call        TRANSFORMER_dig ; 666
            movlw       0x85          ; 777 6          ; курсор в пределах первой строки ( 0x80 - начало )
            call        LCD_com       ; загружаем команду 666
            movlw       0x30          ; подменяем пустым знакоместом , если первый 0 
            movwf       Reg_tmp1      ; -//-
            movf        Tens,W        ; -//-
            call        TABL_dig      ; -//- 
            xorwf       Reg_tmp1,F    ; -//-
            skpnz                     ; -//-
            movlw       0x20          ; -//-
            call        LCD_dig       ; загружаем данные 
            movf        Ones,W        ; копируем в W содержимое Ones
            call        TABL_dig      ; отправляем на дисплей содержимое Ones 
            call        LCD_dig       ; загружаем данные 
            call        simb_proc     ; % 
            return

AVTTh       btfsc       DAT_ENC       ; читаем данные с энкодера и меняем уставку автоматический - ручной режим работы для верхнего нагревателя
            goto        ABTh          ; -//-
            btfss       DAT_ENC       ; -//- 
            goto        RUCHh         ; -//-

T_Ph        btfsc       AV_R_H        ; проверяем метку AV_R_H и исходя из этого меняем уставку верхнего нагревателя T или P при повороте энкодера
            goto        UST_Th        ; -//- 
            btfss       AV_R_H        ; -//- 
            goto        UST_Ph        ; -//- 

UST_Th      btfsc       DAT_ENC       ; читаем данные с энкодера и меняем уставку установленной температуры для верхнего нагревателя
            goto        Th_UP         ; -//- 
            btfss       DAT_ENC       ; -//- 
            goto        Th_DOWN       ; -//- 

Th_UP       bcf         STATUS, Z     ; сбрасываем флаг Z
            movlw       .255          ; загружаем шаблон для проверки предельного результата температуры
            xorwf       T_h,W         ; сравниваем с регистром T_h
            btfss       STATUS, Z     ; проверяем состояние флага Z, пропускаем если 1 (1=совпали данные)
            goto        Th_UPs        ; увеличиваем установленную температуру на 1
            goto        ENC           ; уходим отсюда (ничего не делаем если результат 255)

Th_DOWN     bcf         STATUS, Z     ; сбрасываем флаг Z
            movlw       0x0A          ; загружаем шаблон для проверки нижнего предела 10
            xorwf       T_h,W         ; сравниваем с регистром T_h
            btfss       STATUS, Z     ; проверяем состояние флага Z, пропускаем если 1 (1=совпали данные)
            goto        Th_DOWNs      ; уменьшаем установленную температуру на 1
            goto        ENC           ; уходим отсюда (ничего не делаем если результат 10)

Th_UPs      incf        T_h,F         ; увеличиваем содержимое T_h
            goto        OUTPUT_Th     ; выводим на дисплей предустановленную температуру для автоматического режима работы верхнего нагреватедя

Th_DOWNs    decf        T_h,F         ; уменьшаем содержимое T_h
            goto        OUTPUT_Th     ; выводим на дисплей предустановленную температуру для автоматического режима работы верхнего нагревателя

AVTTl       btfsc       DAT_ENC       ; читаем данные с энкодера и меняем уставку автоматический - ручной режим работы для нижнего нагревателя
            goto        ABTl          ; -//- 
            btfss       DAT_ENC       ; -//- 
            goto        RUCHl         ; -//- 

T_Pl        btfsc       AV_R_L        ; проверяем метку AV_R_L и исходя из этого меняем уставку нижнего нагревателя T или P при повороте энкодера
            goto        UST_Tl        ; -//- 
            btfss       AV_R_L        ; -//- 
            goto        UST_Pl        ; -//- 

UST_Tl      btfsc       DAT_ENC       ; читаем данные с энкодера и меняем уставку установленной температуры для нижнего нагревателя
            goto        Tl_UP         ; -//- 
            btfss       DAT_ENC       ; -//- 
            goto        Tl_DOWN       ; -//- 

Tl_UP       bcf         STATUS, Z     ; сбрасываем флаг Z
            movlw       .255          ; загружаем шаблон для проверки предельного результата температуры
            xorwf       T_l,W         ; сравниваем с регистром T_l
            btfss       STATUS, Z     ; проверяем состояние флага Z, пропускаем если 1 (1=совпали данные)
            goto        Tl_UPs        ; увеличиваем установленную температуру на 1
            goto        ENC           ; уходим отсюда (ничего не делаем если результат 255)

Tl_DOWN     bcf         STATUS, Z     ; сбрасываем флаг Z
            movlw       0x0A          ; загружаем шаблон для проверки нижнего предела 10
            xorwf       T_l,W         ; сравниваем с регистром T_l
            btfss       STATUS, Z     ; проверяем состояние флага Z, пропускаем если 1 (1=совпали данные)
            goto        Tl_DOWNs      ; уменьшаем установленную температуру на 1
            goto        ENC           ; уходим отсюда (ничего не делаем если результат 10)

Tl_UPs      incf        T_l,F         ; увеличиваем содержимое T_l
            goto        OUTPUT_Tl     ; выводим на дисплей предустановленную температуру для автоматического режима работы нижнего нагревателя

Tl_DOWNs    decf        T_l,F         ; уменьшаем содержимое T_l
            goto        OUTPUT_Tl     ; выводим на дисплей предустановленную температуру для автоматического режима работы нижнего нагревателя


; выводим на дисплей предустановленную температуру для автоматического режима работы вернего нагревателя
OUTPUT_Th   clrf        Reg_tmpH      ; очищаем регистр Reg_tmpH
            movf        T_h,W         ; копируем в Reg_tmpL содержимое регистра T_h
            movwf       Reg_tmpL      ; -//-
            movwf       Reg_T_USTh    ; вписываем температуру в регистр Reg_T_USTh для автоматического режима работы верхнего нагревателя
            call        TRANSFORMER_dig ;
            movlw       0x8B          ; курсор в пределах первой строки ( 0x80 - начало ) 666
            call        LCD_com       ; загружаем команду
            call        simb_t        ; t
            movlw       0x30          ; подменяем пустым знакоместом , если первый 0 
            movwf       Reg_tmp1      ; -//-
            movf        Hund,W        ; -//-
            call        TABL_dig      ; -//-
            xorwf       Reg_tmp1,F    ; -//-
            skpnz                     ; -//-
            movlw       0x20          ; -//-
            call        LCD_dig       ; загружаем данные
            movf        Tens,W        ; копируем в W содержимое Tens
            call        TABL_dig      ; отправляем на дисплей содержимое Tens 
            call        LCD_dig       ; загружаем данные
            movf        Ones,W        ; копируем в W содержимое Ones
            call        TABL_dig      ; отправляем на дисплей содержимое Ones 
            call        LCD_dig       ; загружаем данные 
            return

UST_Ph      btfsc       DAT_ENC       ; читаем данные с энкодера и меняем уставку установленной мощности для верхнего нагревателя
            goto        Ph_UP         ; -//-
            btfss       DAT_ENC       ; -//-
            goto        Ph_DOWN       ; -//-

Ph_UP       bcf         STATUS, Z     ; сбрасываем флаг Z
            movlw       .99           ; загружаем шаблон для проверки предельного результата мощности 99%
            xorwf       P_h,W         ; сравниваем с регистром P_h
            btfss       STATUS, Z     ; проверяем состояние флага Z, пропускаем если 1 (1=совпали данные)
            goto        Ph_UPs        ; увеличиваем установленную мощность на 1
            goto        ENC           ; уходим отсюда (ничего не делаем если результат 99)

Ph_DOWN     bcf         STATUS, Z     ; сбрасываем флаг Z
            movlw       0x00          ; загружаем шаблон для проверки нижнего предела 0
            xorwf       P_h,W         ; сравниваем с регистром P_h
            btfss       STATUS, Z     ; проверяем состояние флага Z, пропускаем если 1 (1=совпали данные)
            goto        Ph_DOWNs      ; уменьшаем установленную мощность на 1
            goto        ENC           ; уходим отсюда (ничего не делаем если результат 0)

Ph_UPs      incf        P_h,F         ; увеличиваем содержимое P_h
            goto        OUTPUT_Ph     ; выводим на дисплей предустановленную мощность для ручного режима работы нижнего нагревателя

Ph_DOWNs    decf        P_h,F         ; уменьшаем содержимое P_h
            goto        OUTPUT_Ph     ; выводим на дисплей предустановленную мощность для ручного режима работы нижнего нагревателя

; выводим на дисплей предустановленную мощность для ручного режима работы верхнего нагревателя, и записываем в ШИМ уставку мощности
OUTPUT_Ph   clrf        Reg_tmpH      ; очищаем Reg_tmpH
            movf        P_h,W         ; копируем в Reg_tmpL содержимое регистра P_h
            movwf       Reg_tmpL      ; -//-
            movwf       CCPR2L        ; вписываем мощность в ШИМ для ручного режима работы верхнего нагревателя
            call        TRANSFORMER_dig ;
            movlw       0x8B          ; курсор в пределах первой строки ( 0x80 - начало ) 666
            call        LCD_com       ; загружаем команду
            call        simb_P        ; P 
            movlw       0x30          ; подменяем пустым знакоместом , если первый 0 
            movwf       Reg_tmp1      ; -//-
            movf        Tens,W        ; -//-
            call        TABL_dig      ; -//-
            xorwf       Reg_tmp1,F    ; -//-
            skpnz                     ; -//-
            movlw       0x20          ; -//-
            call        LCD_dig       ; загружаем данные
            movf        Ones,W        ; копируем в W содержимое Ones
            call        TABL_dig      ; отправляем на дисплей содержимое Ones 666
            call        LCD_dig       ; загружаем данные
            call        simb_proc     ; %
            return

UST_Pl      btfsc       DAT_ENC       ; читаем данные с энкодера и меняем уставку установленной мощности для нижнего нагревателя
            goto        Pl_UP         ; -//-
            btfss       DAT_ENC       ; -//-
            goto        Pl_DOWN       ; -//-

Pl_UP       bcf         STATUS, Z     ; сбрасываем флаг Z
            movlw       .99           ; загружаем шаблон для проверки предельного результата мощности 99%
            xorwf       P_l,W         ; сравниваем с регистром P_l
            btfss       STATUS, Z     ; проверяем состояние флага Z, пропускаем если 1 (1=совпали данные)
            goto        Pl_UPs        ; увеличиваем установленную мощность на 1
            goto        ENC           ; уходим отсюда (ничего не делаем если результат 99)

Pl_DOWN     bcf         STATUS, Z     ; сбрасываем флаг Z
            movlw       0x00          ; загружаем шаблон для проверки нижнего предела 0
            xorwf       P_l,W         ; сравниваем с регистром P_l
            btfss       STATUS, Z     ; проверяем состояние флага Z, пропускаем если 1 (1=совпали данные)
            goto        Pl_DOWNs      ; уменьшаем установленную мощность на 1
            goto        ENC           ; уходим отсюда (ничего не делаем если результат 0)

Pl_UPs      incf        P_l,F         ; увеличиваем содержимое P_l
            goto        OUTPUT_Pl     ; выводим на дисплей предустановленную мощность для ручного режима работы нижнего нагревателя

Pl_DOWNs    decf        P_l,F         ; уменьшаем содержимое P_l
            goto        OUTPUT_Pl     ; выводим на дисплей предустановленную мощность для ручного режима работы нижнего нагревателя

; выводим на дисплей предустановленную температуру для автоматического режима работы нижнего нагревателя
OUTPUT_Tl   clrf        Reg_tmpH      ; очищаем регистр Reg_tmpH
            movf        T_l,W         ; копируем в Reg_tmpL содержимое регистра T_l
            movwf       Reg_tmpL      ; -//-
            movwf       Reg_T_USTl    ; вписываем температуру в регистр Reg_T_USTl для автоматического режима работы нижнего нагревателя
            call        TRANSFORMER_dig ;
            movlw       0xCB          ; курсор в пределах второй строки ( 0xC0 - начало ) 666
            call        LCD_com       ; загружаем команду
            call        simb_t        ; t 666
            movlw       0x30          ; подменяем пустым знакоместом , если первый 0 
            movwf       Reg_tmp1      ; -//-
            movf        Hund,W        ; -//-
            call        TABL_dig      ; -//-
            xorwf       Reg_tmp1,F    ; -//-
            skpnz                     ; -//-
            movlw       0x20          ; -//-
            call        LCD_dig       ; загружаем данные
            movf        Tens,W        ; копируем в W содержимое Tens
            call        TABL_dig      ; отправляем на дисплей содержимое Tens
            call        LCD_dig       ; загружаем данные
            movf        Ones,W        ; копируем в W содержимое Ones
            call        TABL_dig      ; отправляем на дисплей содержимое Ones
            call        LCD_dig       ; загружаем данные
            return

; выводим на дисплей предустановленную мощность для ручного режима работы нижнего нагревателя, и записываем в ШИМ уставку мощности
OUTPUT_Pl   clrf        Reg_tmpH      ; очищаем Reg_tmpH
            movf        P_l,W         ; копируем в Reg_tmpL содержимое регистра P_l
            movwf       Reg_tmpL      ; -//-
            movwf       CCPR1L        ; вписываем мощность в ШИМ для ручного режима работы нижнего нагревателя
            call        TRANSFORMER_dig ;
            movlw       0xCB          ; курсор в пределах второй строки ( 0xC0 - начало ) 666
            call        LCD_com       ; загружаем команду
            call        simb_P        ; P
            movlw       0x30          ; подменяем пустым знакоместом , если первый 0 
            movwf       Reg_tmp1      ; -//-
            movf        Tens,W        ; -//-
            call        TABL_dig      ; -//-
            xorwf       Reg_tmp1,F    ; -//-
            skpnz                     ; -//-
            movlw       0x20          ; -//-
            call        LCD_dig       ; загружаем данные
            movf        Ones,W        ; копируем в W содержимое Ones
            call        TABL_dig      ; отправляем на дисплей содержимое Ones
            call        LCD_dig       ; загружаем данные
            call        simb_proc     ; % 666
            return

ONOFFh      btfsc       DAT_ENC       ; читаем данные с энкодера и меняем уставку включение - отключение верхнего нагревателя
            goto        ONh           ; -//-
            btfss       DAT_ENC       ; -//-
            goto        OFFh          ; -//-

ONOFFl      btfsc       DAT_ENC       ; читаем данные с энкодера и меняем уставку включение - отключение нижнего нагревателя
            goto        ONl           ; -//-
            btfss       DAT_ENC       ; -//-
            goto        OFFl          ; -//-

PRR         btfsc       DAT_ENC       ; читаем данные с энкодера и меняем уставку номера термопрофиля
            goto        PR_UP         ; -//-
            btfss       DAT_ENC       ; -//-
            goto        PR_DOWN       ; -//-

PR_UP       bcf         STATUS, Z     ; сбрасываем флаг Z
            movlw       .14           ; загружаем шаблон для проверки предельного результата термопрофиля 14
            xorwf       Reg_tmp_PR,W  ; сравниваем с регистром Reg_tmp_PR
            btfss       STATUS, Z     ; проверяем состояние флага Z, пропускаем если 1 (1=совпали данные)
            goto        PR_UPs        ; увеличиваем на 1 номер термопрофиля
            goto        ENC           ; уходим отсюда (ничего не делаем если результат 14)

PR_DOWN     bcf         STATUS, Z     ; сбрасываем флаг Z
            movlw       0x01          ; загружаем шаблон для проверки нулевого результата 1
            xorwf       Reg_tmp_PR,W  ; сравниваем с регистром Reg_tmp_PR
            btfss       STATUS, Z     ; проверяем состояние флага Z, пропускаем если 1 (1=совпали данные)
            goto        PR_DOWNs      ; уменьшаем на 1 номер термопрофиля
            goto        ENC           ; уходим отсюда (ничего не делаем если результат 1)

PR_UPs      incf        Reg_tmp_PR,F  ; увеличиваем содержимое Reg_tmp_PR
            goto        OUTPUT_PR     ; выводим на дисплей номер термопрофиля

PR_DOWNs    decf        Reg_tmp_PR,F  ; уменьшаем содержимое Reg_tmp_PR
            goto        OUTPUT_PR     ; выводим на дисплей номер термопрофиля

; выводим на дисплей номер термопрофиля
OUTPUT_PR   clrf        Reg_tmpH      ; очищаем Reg_tmpH
            movf        Reg_tmp_PR,W  ; копируем в Reg_tmpL содержимое Reg_tmp_PR
            movwf       Reg_tmpL      ; -//-
            call        TRANSFORMER_dig ;
            movlw       0xA1          ; курсор в пределах третьей строки ( 0x94 - начало ) 666
            call        LCD_com       ; загружаем команду
            movlw       0x30          ; подменяем пустым знакоместом , если первый 0 
            movwf       Reg_tmp1      ; -//-
            movf        Tens,W        ; -//-
            call        TABL_dig      ; -//-
            xorwf       Reg_tmp1,F    ; -//-
            skpnz                     ; -//-
            movlw       0x20          ; -//-
            call        LCD_dig       ; загружаем данные
            movf        Ones,W        ; копируем в W содержимое Ones
            call        TABL_dig      ; отправляем на дисплей содержимое Ones
            call        LCD_dig       ; загружаем данные
            movf        Reg_tmp_PR,W  ; копируем в W содержимое Reg_tmp_PR
            goto        PR_info       ; выводим информацию о термопрофиле
            return


                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                           ; Подпрограмма обработки данных с кнопки ;
                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Button      bcf         INTCON, GIE   ; запрещаем прерывания
            bcf         ON_OFF_ENC_F  ; сбрасываем флаг нажатия кнопки
            movlw       .1            ; вводим константы для ожидания отжатия кнопки (1s)
            movwf       Reg_1         ; -//- 
            movlw       .69           ; -//- 
            movwf       Reg_2         ; -//-
            movlw       .21           ; -//- 
            movwf       Reg_3         ; -//-
trc         decfsz      Reg_1, F
            goto        trc
            btfsc       ON_OFF_ENC    ; ждем момента отжатия кнопки энкодера
            goto        kursor_F      ; меняем местоположение курсора, если отжата кнопка менее чем за 1 сек
            clrwdt
            decfsz      Reg_2, F
            goto        trc
            decfsz      Reg_3, F
            goto        trc
            call        BEEEP         ; длинный звуковой сигнал, если кнопка нажата более 1 сек
            goto        TPR           ; работа по термопрофилю

; фиксируем или снимаем с фиксации курсор, если кнопка отжата менее чем за 1 сек
kursor_F    movlw       B'00000010'   ; инвертируем флаг фиксации курсора
            xorwf       TEMPS, F      ; -//-
            movlw       0xD4          ; курсор в пределах четвертой строки ( 0xD4 - начало ) 666
            call        LCD_com       ; загружаем команду 
            btfsc       KURSOR        ; проверяем флаг курсора, если 0 - пропускаем следующую команду
            call        simb_k        ; k
            btfss       KURSOR        ; проверяем флаг курсора, если 1 - пропускаем следующую команду
            call        simb_pust     ; пустое знакоместо
            return

; выставляем курсор
kursor_OUT  call        del_metka     ; стираем метки
            btfsc       kursor, 0     ; проверяем 0 бит, и выводим соответствующий курсор
            call        metka1       
            btfsc       kursor, 1     ; проверяем 1 бит 
            call        metka2
            btfsc       kursor, 2     ; проверяем 2 бит 
            call        metka3
            btfsc       kursor, 3     ; проверяем 3 бит 
            call        metka4
            btfsc       kursor, 4     ; проверяем 4 бит 
            call        metka5
            btfsc       kursor, 5     ; проверяем 5 бит 
            call        metka6
            btfsc       kursor, 6     ; проверяем 6 бит 
            call        metka7
            bcf         ON_OFF_ENC_F  ; сбрасываем флаг нажатия кнопки
            bcf         INC_F         ; сброс флага поворота энкоера
            bsf         INTCON, GIE   ; разрешаем прерывания
            return


T_UST       bsf         SEC_PAUS      ; поднимаем флаг необходимости паузы термопрофиля
            call        OUT_T_UST     ; выводим значение предустановки температуры на дисплей
            call        SEC_INC       ; секундомер +1 и вывод значения на дисплей
            movlw       .34           ; вводим константу для 1 секундной задержки в отсчете секундомера
            movwf       Reg_tmp_TMR   ; -//- 
mnj         call        OUT_T_h       ; выводим температуру верхней термопары на дисплей
            call        OUT_T_l       ; выводим температуру нижней термопары на дисплей
            btfss       ON_OFF_ENC    ; опрашиваем кнопку энкодера
            goto        OFF           ; отключаем работу по термопрофилю, если нажата кнопка энкодера
            btfsc       AV_R_L        ; проверяем флаг AV_R_L
            goto        jjg           ; коррекция мощности нижнего нагревателя по предустановке температуры, если нижний нагреватель работает в автоматическом режиме
            call        T_READ_h      ; коррекция мощности верхнего нагревателя по предустановке температуры
            btfsc       PROPUSK       ; 999 проверяем состояние флага PROPUSK, пропускаем если 0 (0-пропуск не требуется)
            return                    ; 999 -//-
hhd         call        T_READ_h      ; коррекция мощности верхнего нагревателя по предустановке температуры

            btfsc       PROPUSK       ; проверяем состояние флага PROPUSK, пропускаем если 0 (0-пропуск не требуется)
            return                    ; -//-

            call        T_READ_h      ; коррекция мощности верхнего нагревателя по предустановке температуры
            call        T_READ_h      ; коррекция мощности верхнего нагревателя по предустановке температуры
            call        T_READ_h      ; коррекция мощности верхнего нагревателя по предустановке температуры
            call        T_READ_h      ; коррекция мощности верхнего нагревателя по предустановке температуры
            call        T_READ_h      ; коррекция мощности верхнего нагревателя по предустановке температуры
            call        T_READ_h      ; коррекция мощности верхнего нагревателя по предустановке температуры
            call        T_READ_h      ; коррекция мощности верхнего нагревателя по предустановке температуры
            call        T_READ_h      ; коррекция мощности верхнего нагревателя по предустановке температуры
            decfsz      Reg_tmp_TMR,F ; пропускаем следующую команду, если вышло время ожидания (1 секунда)
            goto        mnj
            btfsc       SEC_PAUS      ; проверяем флаг необходимости паузы термопрофиля
            goto        T_UST_P       ; пауза термопрофиля +1 круг (ждем, когда нагреватель нагреет до заданной температуры)
            return                    
jjg         call        T_READ_l      ; коррекция мощности нижнего нагревателя по предустановке температуры, если нижний нагреватель работает в автоматическом режиме
            goto        hhd           ; пропускаем 1 шаг T_READ_h, для коррекции времени, если была обработка T_READ_l
T_UST_P     movlw       .1            ; пауза термопрофиля +1 круг (ждем, когда нагреватель нагреет до заданной температуры)
            movwf       Reg_tmp_TMR   ; -//- 
            goto        mnj

; отключаем работу по термопрофилю, если нажата кнопка энкодера
OFF         call        OFFh          ; отключаем верхний нагреватель
            bcf         PROPUSK       ; 999 опускаем флаг необходимости пропуска термопрофиля (0-пропуск не требуется)
            goto        Go            ; возврат в основной цикл программы 


; выводим значение предустановки температуры термопрофиля на дисплей
OUT_T_UST   movwf       Reg_tmpL      ; записываем в Reg_tmpL уставку температуры
            movwf       Reg_T_USTh    ; записываем в Reg_T_USTh уставку температуры
            clrf        Reg_tmpH      ; очищаем Reg_tmpH
            call        TRANSFORMER_dig
            movlw       0x94          ; курсор в пределах третьей строки ( 0x94 - начало )
            call        LCD_com       ; загружаем команду
            movlw       0x30          ; подменяем пустым знакоместом , если первый 0 
            movwf       Reg_tmp1      ; -//-
            movf        Hund,W        ; -//-
            call        TABL_dig      ; -//-
            xorwf       Reg_tmp1,F    ; -//-
            skpnz                     ; -//-
            movlw       0x20          ; -//-
            call        LCD_dig       ; загружаем данные
            movf        Tens,W        ; копируем в W содержимое Tens
            call        TABL_dig      ; отправляем на дисплей содержимое Tens
            call        LCD_dig       ; загружаем данные
            movf        Ones,W        ; копируем в W содержимое Ones
            call        TABL_dig      ; отправляем на дисплей содержимое Ones
            call        LCD_dig       ; загружаем данные
            return

; выводим значение секундомера термопрофиля на дисплей +1 сек
SEC_INC     incfsz      Reg_tmp4, F   ; увеличиваем на 1 содержимое Reg_tmp4
            goto        SEC_OUT       ; выводим предустановленную температуру, если не было переноса
            incfsz      Reg_tmp5, F   ; увеличиваем на 1 содержимое Reg_tmp5, если был перенос
SEC_OUT     movf        Reg_tmp4,W    ; копируем содержимое Reg_tmp4 в Reg_tmpL
            movwf       Reg_tmpL      ; -//-
            movf        Reg_tmp5,W    ; копируем содержимое Reg_tmp5 в Reg_tmpH
            movwf       Reg_tmpH      ; -//-
            call        TRANSFORMER_dig
            movlw       0x9A          ; курсор в пределах третьей строки ( 0x94 - начало )
            call        LCD_com       ; загружаем команду
            movlw       0x30          ; подменяем пустым знакоместом , если первый 0 
            movwf       Reg_tmp1      ; -//-
            movf        Hund,W        ; -//-
            call        TABL_dig      ; -//-
            xorwf       Reg_tmp1,F    ; -//-
            skpnz                     ; -//-
            goto        rrt           ; подменяем пустым знакоместом, если первый 0, проверяем второе число
            call        LCD_dig       ; загружаем данные
            movf        Tens,W        ; копируем в W содержимое Tens
            call        TABL_dig      ; отправляем на дисплей содержимое Tens
            call        LCD_dig       ; загружаем данные
            movf        Ones,W        ; копируем в W содержимое Ones
            call        TABL_dig      ; отправляем на дисплей содержимое Ones
            call        LCD_dig       ; загружаем данные
            return

rrt         call        simb_pust     ; пустое знакоместо
            movlw       0x30          ; подменяем пустым знакоместом , если второй 0 при условии что первый тоже 0 
            movwf       Reg_tmp1      ; -//-
            movf        Tens,W        ; -//-
            call        TABL_dig      ; -//-
            xorwf       Reg_tmp1,F    ; -//-
            skpnz                     ; -//-
            movlw       0x20          ; -//-
            call        LCD_dig       ; загружаем данные
            movf        Ones,W        ; копируем в W содержимое Ones
            call        TABL_dig      ; отправляем на дисплей содержимое Ones
            call        LCD_dig       ; загружаем данные
            return


; подготовительные операции перед началом выполнения термопрофиля, расстановка символов, удаление надписи ТЕРМОПРОФИЛЬ
ress        clrf        Reg_tmp4      ; очищаем временные регистры секундомера
            clrf        Reg_tmp5      ; -//-  
            call        ON_PR         ; выводим надпись ПУСК напротив ТЕРМОПРОФИЛЬ
            call        ONh           ; включаем верхний нагреватель, выводим надпись ВКЛ
            movlw       0x97          ; курсор в пределах третьей строки ( 0x94 - начало )
            call        LCD_com       ; загружаем команду
            call        simb_grad     ; "
            call        simb_pust     ; 777 simb_C        ; C
            call        simb_pust     ; пустое знакоместо
            movlw       0x9D          ; курсор в пределах третьей строки ( 0x94 - начало )
            call        LCD_com       ; загружаем команду
            call        simb_S        ; S
            call        simb_pust     ; пустое знакоместо
            call        simb_P        ; P
            call        simb_r        ; r
            return


; коррекция мощности верхнего нагревателя по предустановке температуры
T_READ_h ; читаем температуру верхней термопары 
            banksel     ADCON0        ; переходим в регистр ADCON0
            movlw       b'10010001'   ; включаем модуль АЦП, RA2 - вход, Fosc/32 (термопара)
            btfss       PORTC,RC0     ; пропускаем следующую команду, если отключен терморезистор
            movlw       b'10100001'   ; включаем модуль АЦП, RA5 - вход, Fosc/32 (терморезистор)
            movwf       ADCON0        ; -//-  
            banksel     ADCON1        ; переходим в регистр ADCON1
            movlw       b'10000000'   ; включаем правое выравнивание
            movwf       ADCON1        ; -//- 
            bcf         STATUS,RP0    ; переход в банк 0
            call        del_1ms       ; задержка для заряда конденсатора АЦП перед преобразованием
            bsf         ADCON0,2      ; включаем преобразование АЦП
            call        del_40mcs
            btfsc       ADCON0,2      ; ожидаем завершения
            goto        $-1           ; преобразования
            movfw       ADRESH        ; перепишем результат преобразования
            movwf       Reg_tmpH      ; в старший временный регистр
            banksel     ADRESL        ; переходим в регистр ADRESL
            movfw       ADRESL        ; перепишем результат преобразования
            bcf         STATUS,RP0    ; переход в банк 0
            movwf       Reg_tmpL      ; в младший временный регистр

            bcf         STATUS, Z     ; сбрасываем флаг Z
            clrw                      ; очищаем W (загружаем шаблон для проверки нулевого результата Reg_tmpH)
            xorwf       Reg_tmpH, W   ; проверяем равно ли значение Reg_tmpH содержимому регистра W
            btfss       STATUS, Z     ; проверяем значение флага Z, если =1 то значение W и Reg_tmpH не равно и исполняется следующая команда
            goto        T_DOWN_h      ; понижаем температуру, если Reg_tmpH выше 0, то есть температура верхней термопары выше 255 "C
            movf        Reg_tmpL,W    ; копируем младший байт результата преобразования АЦП в W 
;           bcf         STATUS, Z     
            bcf         STATUS, C     ; сбрасываем флаг C
            subwf       Reg_T_USTh, W ; вычитаем Reg_T_USTh из W
;           btfsc       STATUS, Z
;           return
            btfss       STATUS, C     ; проверяем значение флага C, если =1 температуру повышаем, если =0 температуру понижаем
            goto        T_DOWN_h      ; -//- 
            goto        T_UP_h        ; -//- 

; проверяем предельный результат уставки мощности верхнего нагревателя, и повышаем мощность, если уставка менее 99%
T_UP_h      bcf         STATUS, Z     ; сбрасываем флаг Z
            bcf         PROPUSK       ; 999 сбрасываем флаг необходимости пропуска термопрофиля (0-пропуск не требуется)
            movfw       Reg_T_TEMPhh  ; перепишем из Reg_T_TEMPhh шаблон максимальной выходной мощности
;           movlw       .99           ; загружаем шаблон для проверки предельного результата уставки мощности 99%
            xorwf       Reg_T_TEMPh,W ; сравниваем с регистром Reg_T_TEMPh
            btfss       STATUS, Z     ; проверяем состояние флага Z, пропускаем если 1 (1=совпали данные)
            goto        T_UPs_h       ; повышаем мощность верхнего нагревателя, если уставка менее 99%
            return                    ; уходим отсюда (ничего не делаем если результат 99%)


; проверяем нижний результат уставки мощности верхнего нагревателя, и понижаем мощность, если уставка более 0%
T_DOWN_h    bcf         SEC_PAUS      ; опускаем флаг необходимости паузы термопрофиля
            btfsc       PROPUSK       ; 999 проверяем состояние флага PROPUSK, пропускаем если 0 (0-пропуск не требуется)
            return                    ; 999 -//-
            bcf         STATUS, Z     ; сбрасываем флаг Z
            movlw       0x00          ; загружаем шаблон для проверки нулевого результата 0%
            xorwf       Reg_T_TEMPh,W ; сравниваем с регистром Reg_T_TEMPh
            btfss       STATUS, Z     ; проверяем состояние флага Z, пропускаем если 1 (1=совпали данные)
            goto        T_DOWNs_h     ; понижаем мощность верхнего нагревателя, если уставка более 0%
            clrw                      ; очищаем регистр W
            movwf       CCPR2L        ; записываем данные в ШИМ, выключаем верхний нагреватель, если результат 0%
            return                    ; уходим отсюда, если результат 0%

; повышаем мощность верхнего нагревателя
T_UPs_h     incf        Reg_T_TEMPh,F ; увеличиваем на 1 содержимое Reg_T_TEMPh
            movf        Reg_T_TEMPh,W ; копируем в W содержимое Reg_T_TEMPh
            movwf       CCPR2L        ; записываем данные в ШИМ
            return

; понижаем мощность верхнего нагревателя
T_DOWNs_h   decf        Reg_T_TEMPh,F ; уменьшаем на 1 содержимое Reg_T_TEMPh
            clrf        Reg_T_TEMPh   ; очищаем Reg_T_TEMPh, то есть мгновенно отключаем верхний нагреватель вместо плавного понижения мощности(для более точного поддержания температуры)
            movf        Reg_T_TEMPh,W ; копируем в W содержимое Reg_T_TEMPh
            movwf       CCPR2L        ; записываем данные в ШИМ
            return

OUT_T_h  ; выводим на дисплей температуру верхней термопары 
            banksel     ADCON0        ; переходим в регистр ADCON0
            movlw       b'10010001'   ; включаем модуль АЦП, RA2 - вход, Fosc/32 (термопара)
            btfss       PORTC,0       ; пропускаем следующую команду, если отключен терморезистор
            movlw       b'10100001'   ; включаем модуль АЦП, RA5 - вход, Fosc/32 (терморезистор)
            movwf       ADCON0        ; -//-  
            banksel     ADCON1        ; переходим в регистр ADCON1
            movlw       b'10000000'   ; включаем правое выравнивание
            movwf       ADCON1        ; -//- 
            bcf         STATUS,RP0    ; переход в банк 0
            call        del_1ms       ; задержка для заряда конденсатора АЦП перед преобразованием
            bsf         ADCON0,2      ; включаем преобразование АЦП
            call        del_40mcs
            btfsc       ADCON0,2      ; ожидаем завершения
            goto        $-1           ; преобразования
            movfw       ADRESH        ; перепишем результат преобразования
            movwf       Reg_tmpH      ; в старший временный регистр
            banksel     ADRESL        ; переходим в регистр ADRESL
            movfw       ADRESL        ; перепишем результат преобразования
            bcf         STATUS,RP0    ; переход в банк 0
            movwf       Reg_tmpL      ; в младший временный регистр
            call        TRANSFORMER_dig ; перекодируем двоичное число результата преобразования в десятичное
            movlw       0x81          ; курсор в пределах первой строки ( 0x80 - начало )
            call        LCD_com       ; загружаем команду 
            movf        Thou,W        ; копируем в W содержимое Thou
            btfsc       Thou,0        ; проверяем значение регистра тысячных показаний, если 1, значит переполнение показаний
            goto        overflowTh    ; отправляемся отображать ---
            movf        Reg_tmpH,W    ; копируем старший байт результата преобразования АЦП в W 
            bcf         STATUS, C     ; сбрасываем флаг C
            movlw       b'00000010'   ; копируем шаблон для сравнения с Reg_tmpH
            subwf       Reg_tmpH, W   ; вычитаем Reg_tmpH из W
            btfsc       STATUS, C     ; проверяем значение флага C, если =1 значит был перенос(значение температуры более 512"С), если =0 значит не было переноса(значение температуры ниже 512"С)
            goto        overflowTh    ; отправляемся отображать ---, если температура более 512"С
            movlw       0x30          ; подменяем пустым знакоместом , если первый 0 
            movwf       Reg_tmp1      ; -//-
            movf        Hund,W        ; -//-
            call        TABL_dig      ; -//-
            xorwf       Reg_tmp1,F    ; -//-
            skpnz                     ; -//-
            movlw       0x20          ; -//-
            call        LCD_dig       ; загружаем данные
            movf        Tens,W        ; копируем в W содержимое Tens
            call        TABL_dig      ; отправляем на дисплей содержимое Tens
            call        LCD_dig       ; загружаем данные
            movf        Ones,W        ; копируем в W содержимое Ones
            call        TABL_dig      ; отправляем на дисплей содержимое Ones
            call        LCD_dig       ; загружаем данные
            return
overflowTh  call        simb_tire     ; - (выводим --- вместо 1024)
            call        simb_tire     ; -
            call        simb_tire     ; -
            return

; коррекция мощности нижнего нагревателя по предустановке температуры
T_READ_l ; читаем температуру нижней термопары 
            banksel     ADCON0        ; переходим в регистр ADCON0
            movlw       b'10011001'   ; включаем модуль АЦП, RA3 - вход, Fosc/32
            movwf       ADCON0        ; -//-  
            banksel     ADCON1        ; переходим в регистр ADCON1
            movlw       b'10000000'   ; включаем правое выравнивание
            movwf       ADCON1        ; -//- 
            bcf         STATUS,RP0    ; переход в банк 0
            call        del_1ms       ; задержка для заряда конденсатора АЦП перед преобразованием
            bsf         ADCON0,2      ; включаем преобразование АЦП
            call        del_40mcs
            btfsc       ADCON0,2      ; ожидаем завершения
            goto        $-1           ; преобразования
            movfw       ADRESH        ; перепишем результат преобразования
            movwf       Reg_tmpH      ; в старший временный регистр
            banksel     ADRESL        ; переходим в регистр ADRESL
            movfw       ADRESL        ; перепишем результат преобразования
            bcf         STATUS,RP0    ; переход в банк 0
            movwf       Reg_tmpL      ; в младший временный регистр

            bcf         STATUS, Z     ; сбрасываем флаг Z
            clrw                      ; очищаем W (загружаем шаблон для проверки нулевого результата Reg_tmpH)
            xorwf       Reg_tmpH, W   ; проверяем равно ли значение Reg_tmpH содержимому регистра W
            btfss       STATUS, Z     ; проверяем значение флага Z, если =1 то значение W и Reg_tmpH не равно и исполняется следующая команда
            goto        T_DOWN_l      ; понижаем температуру, если Reg_tmpH выше 0, то есть температура нижней термопары выше 255 "C
            movf        Reg_tmpL,W    ; копируем младший байт результата преобразования АЦП в W 
;           bcf         STATUS, Z     
            bcf         STATUS, C
            subwf       Reg_T_USTl, W ; вычитаем Reg_T_USTl из W
;           btfsc       STATUS, Z
;           return
            btfss       STATUS, C     ; проверяем значение флага C, если =1 температуру повышаем, если =0 температуру понижаем
            goto        T_DOWN_l      ; -//- 
            goto        T_UP_l        ; -//- 

; проверяем предельный результат уставки мощности нижнего нагревателя, и повышаем мощность, если уставка менее 99%
T_UP_l      bcf         STATUS, Z     ; сбрасываем флаг Z
            movfw       Reg_T_TEMPll  ; перепишем из Reg_T_TEMPll шаблон максимальной выходной мощности
;           movlw       .99           ; загружаем шаблон для проверки предельного результата уставки мощности 99%
            xorwf       Reg_T_TEMPl,W ; сравниваем с регистром Reg_T_TEMPl
            btfss       STATUS, Z     ; проверяем состояние флага Z, пропускаем если 1 (1=совпали данные)
            goto        T_UPs_l       ; повышаем мощность нижнего нагревателя, если уставка менее 99%
            return                    ; уходим отсюда (ничего не делаем если результат 99%)

; проверяем нижний результат уставки мощности нижнего нагревателя, и понижаем мощность, если уставка более 0%
T_DOWN_l    bcf         STATUS, Z     ; сбрасываем флаг Z
            movlw       0x00          ; загружаем шаблон для проверки нулевого результата 0%
            xorwf       Reg_T_TEMPl,W ; сравниваем с регистром Reg_T_TEMPl
            btfss       STATUS, Z     ; проверяем состояние флага Z, пропускаем если 1 (1=совпали данные)
            goto        T_DOWNs_l     ; понижаем мощность нижнего нагревателя, если уставка более 0%
            clrw                      ; очищаем регистр W
            movwf       CCPR1L        ; записываем данные в ШИМ, выключаем нижний нагреватель, если результат 0%
            return                    ; уходим отсюда, если результат 0%

; повышаем мощность нижнего нагревателя
T_UPs_l     incf        Reg_T_TEMPl,F ; увеличиваем на 1 содержимое Reg_T_TEMPl
            movf        Reg_T_TEMPl,W ; копируем в W содержимое Reg_T_TEMPl
            movwf       CCPR1L        ; записываем данные в ШИМ
            return

; понижаем мощность нижнего нагревателя
T_DOWNs_l   decf        Reg_T_TEMPl,F ; уменьшаем на 1 содержимое Reg_T_TEMPl
            clrf        Reg_T_TEMPl   ; очищаем Reg_T_TEMPl, то есть мгновенно отключаем нижний нагреватель вместо плавного понижения мощности(для более точного поддержания температуры)
            movf        Reg_T_TEMPl,W ; копируем в W содержимое Reg_T_TEMPl
            movwf       CCPR1L        ; записываем данные в ШИМ
            return

OUT_T_l  ; выводим на дисплей температуру нижней термопары 
            banksel     ADCON0        ; переходим в регистр ADCON0
            movlw       b'10011001'   ; включаем модуль АЦП, RA3 - вход, Fosc/32
            movwf       ADCON0        ; -//-  
            banksel     ADCON1        ; переходим в регистр ADCON1
            movlw       b'10000000'   ; включаем правое выравнивание
            movwf       ADCON1        ; -//- 
            bcf         STATUS,RP0    ; переход в банк 0
            call        del_1ms       ; задержка для заряда конденсатора АЦП перед преобразованием
            bsf         ADCON0,2      ; включаем преобразование АЦП
            call        del_40mcs
            btfsc       ADCON0,2      ; ожидаем завершения
            goto        $-1           ; преобразования
            movfw       ADRESH        ; перепишем результат преобразования
            movwf       Reg_tmpH      ; в старший временный регистр
            banksel     ADRESL        ; переходим в регистр ADRESL
            movfw       ADRESL        ; перепишем результат преобразования
            bcf         STATUS,RP0    ; переход в банк 0
            movwf       Reg_tmpL      ; в младший временный регистр
            call        TRANSFORMER_dig ; перекодируем двоичное число результата преобразования в десятичное
            movlw       0xC1          ; курсор в пределах второй строки ( 0xC0 - начало )
            call        LCD_com       ; загружаем команду 
            movf        Thou,W        ; копируем в W содержимое Thou
            btfsc       Thou,0        ; проверяем значение регистра тысячных показаний, если 1, значит переполнение показаний
            goto        overflowTl    ; отправляемся отображать ---
            movf        Reg_tmpH,W    ; копируем старший байт результата преобразования АЦП в W 
            bcf         STATUS, C     ; сбрасываем флаг C
            movlw       b'00000010'   ; копируем шаблон для сравнения с Reg_tmpH
            subwf       Reg_tmpH, W   ; вычитаем Reg_tmpH из W
            btfsc       STATUS, C     ; проверяем значение флага C, если =1 значит был перенос(значение температуры более 512"С), если =0 значит не было переноса(значение температуры ниже 512"С)
            goto        overflowTl    ; отправляемся отображать ---, если температура более 512"С
            movlw       0x30          ; подменяем пустым знакоместом , если первый 0 
            movwf       Reg_tmp1      ; -//-
            movf        Hund,W        ; -//-
            call        TABL_dig      ; -//-
            xorwf       Reg_tmp1,F    ; -//-
            skpnz                     ; -//-
            movlw       0x20          ; -//-
            call        LCD_dig       ; загружаем данные
            movf        Tens,W        ; копируем в W содержимое Tens
            call        TABL_dig      ; отправляем на дисплей содержимое Tens
            call        LCD_dig       ; загружаем данные
            movf        Ones,W        ; копируем в W содержимое Ones
            call        TABL_dig      ; отправляем на дисплей содержимое Ones
            call        LCD_dig       ; загружаем данные
            return
overflowTl  call        simb_tire     ; - (выводим --- вместо 1024)
            call        simb_tire     ; -
            call        simb_tire     ; -
            return


                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                           ; Подпрограмма конвертации двоичного числа в десятичное ;
                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
TRANSFORMER_dig
            movf        Reg_tmpL,W    ; копируем младший байт результата преобразования АЦП в   
            movwf       bin2          ; в bin2               
            movf        Reg_tmpH,W    ; копируем старший байт результата преобразования АЦП в    
            movwf       bin1          ; в bin1
;bin2 = младший байт преобразуемого числа
;bin1 = старший байт преобразуемого числа
;bcd3 ( младший полубайт ) = единицы
;bcd3 ( старший полубайт ) = десятки
;bcd2 ( младший полубайт ) = сотни
;bcd2 ( старший полубайт ) = тысячи
;bcd1 ( младший полубайт ) = десятки тысяч                                          
            movlw       .16 
            movwf       ctr 
            clrf        bcd1 
            clrf        bcd2 
            clrf        bcd3 
            goto        start 
adjdec      movlw       0x33 
            addwf       bcd1,f 
            addwf       bcd2,f 
            addwf       bcd3,f 
            movlw       0x03 
            btfss       bcd1,3 
            subwf       bcd1,f 
            btfss       bcd2,3 
            subwf       bcd2,f 
            btfss       bcd3,3 
            subwf       bcd3,f 
            movlw       0x30 
            btfss       bcd1,7 
            subwf       bcd1,f 
            btfss       bcd2,7 
            subwf       bcd2,f 
            btfss       bcd3,7 
            subwf       bcd3,f 
start       rlf         bin2,f 
            rlf         bin1,f 
            rlf         bcd3,f 
            rlf         bcd2,f 
            rlf         bcd1,f 
            decfsz      ctr,f 
            goto        adjdec        ; окончание конвертирования                  
            movf        bcd1,w        ; распределение результата по регистрам        
            movwf       TenK          ; десятки тысяч 
            swapf       bcd2,w
            movwf       Thou          ; тысячи 
            movf        bcd2,w
            movwf       Hund          ; сотни 
            swapf       bcd3,w
            movwf       Tens          ; десятки 
            movf        bcd3,w
            movwf       Ones          ; единицы
            return 


                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                           ; Подпрограмма вывода данных на HD44780;
                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; загрузка команды
LCD_com     movwf       LCD_tmp           
            call        E_0
            call        RS_0
            call        LCD_load
            return     

; загрузка цифры 
LCD_dig     movwf       LCD_tmp           
            call        E_0
            call        RS_1
            call        LCD_load
            return 

; загрузка данных в дисплей со стробированием
LCD_load    btfsc       LCD_tmp,7
            D7_1      
            btfss       LCD_tmp,7
            D7_0
            btfsc       LCD_tmp,6
            D6_1      
            btfss       LCD_tmp,6
            D6_0
            btfsc       LCD_tmp,5
            D5_1      
            btfss       LCD_tmp,5
            D5_0
            btfsc       LCD_tmp,4
            D4_1      
            btfss       LCD_tmp,4
            D4_0
            btfsc       LCD_tmp,3
            D3_1      
            btfss       LCD_tmp,3
            D3_0
            btfsc       LCD_tmp,2
            D2_1      
            btfss       LCD_tmp,2
            D2_0
            btfsc       LCD_tmp,1
            D1_1      
            btfss       LCD_tmp,1
            D1_0
            btfsc       LCD_tmp,0
            D0_1      
            btfss       LCD_tmp,0
            D0_0
            call        E_1
            call        del_1ms
            call        E_0
            call        del_1ms
            return 

; команды E, RS выводим через временную переменную (регистр LCD_tmp1, с последующей записью в PORTA) для устранения эффекта чтение-модификация-запись
E_0         bsf         LCD_tmp1,4
            bcf         E_LCD
            movf        LCD_tmp1,W    
            movwf       PORTA         
            return
E_1         bsf         E_LCD
            movf        LCD_tmp1,W    
            movwf       PORTA        
            return
RS_0        bcf         RS_LCD
            movf        LCD_tmp1,W    
            movwf       PORTA        
            return
RS_1        bsf         RS_LCD
            movf        LCD_tmp1,W    
            movwf       PORTA         
            return

; сервисная уставка максимальной мощности нижнего и верхнего нагревателя для автоматического режима работы
UST_Pl_max  call        BEEP          ; звуковой сигнал перед вводом максимальной мощности нижнего нагревателя
            movlw       0x80          ; курсор в пределах первой строки ( 0x80 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_down     ; стрелка вниз
            call        simb_P        ; P
            call        simb_m        ; m
            call        simb_a        ; a
            call        simb_x        ; x
            call        simb_equ      ; 555 simb_tire     ; -
            call        READ_EEP      ; читаем все уставки из EEPROM
            call        OUTPUT_Pll    ; выводим на дисплей устанавливаемую мощность для автоматического режима работы нижнего нагревателя(сервисная уставка)
            call        del_1s        ; задержка 1 сек
            call        del_1s        ; задержка 1 сек   888
UST_Plll    bsf         SERV_UST_l    ; поднимаем флаг необходимости ввода сервисной уставки для нижнего нагревателя
            call        ENC           ; идем обрабатывать данные с энкодера
            btfsc       ON_OFF_ENC    ; опрашиваем кнопку энкодера, производим запись в EEPROM, если нажата кнопка энкодера (продолжение работы программы)
            goto        UST_Plll      ; закольцовка на период ввода сервисной уставки
; записываем данные в EEPROM уставку максимальной мощности нижнего нагревателя для автоматического режима работы
            clrwdt
            banksel     EEADR         ; переходим в регистр EEADR
            movlw       7             ; выбор адреса EEPROM-ячейки 
            movwf       EEADR         ; -//-
            bcf         STATUS,RP0    ; выбор 0-го банка
            bcf         STATUS,RP1    ; -//-
            movf        Reg_T_TEMPll,W ; Копирование данных, Reg_T_TEMPll
            call        EEP_WRITE
            bcf         SERV_UST_l    ; опускаем флаг необходимости ввода сервисной уставки для нижнего нагревателя

            call        BEEP          ; звуковой сигнал перед вводом максимальной мощности верхнего нагревателя
            movlw       0x80          ; курсор в пределах первой строки ( 0x80 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_up       ; стрелка вверх
            call        OUTPUT_Phh    ; выводим на дисплей устанавливаемую мощность для автоматического режима работы верхнего нагревателя(сервисная уставка)
            call        del_1s        ; задержка 1 сек
            call        del_1s        ; задержка 1 сек   888

UST_Phhh    bsf         SERV_UST_h    ; поднимаем флаг необходимости ввода сервисной уставки для верхнего нагревателя
            call        ENC           ; идем обрабатывать данные с энкодера
            btfsc       ON_OFF_ENC    ; опрашиваем кнопку энкодера, производим запись в EEPROM, если нажата кнопка энкодера (продолжение работы программы)
            goto        UST_Phhh      ; закольцовка на период ввода сервисной уставки
; записываем данные в EEPROM уставку максимальной мощности верхнего нагревателя для автоматического режима работы
            clrwdt
            banksel     EEADR         ; переходим в регистр EEADR
            movlw       8             ; выбор адреса EEPROM-ячейки 
            movwf       EEADR         ; -//-
            bcf         STATUS,RP0    ; выбор 0-го банка
            bcf         STATUS,RP1    ; -//-
            movf        Reg_T_TEMPhh,W ; Копирование данных, Reg_T_TEMPhh
            call        EEP_WRITE
            bcf         SERV_UST_h    ; опускаем флаг необходимости ввода сервисной уставки для верхнего нагревателя
            return

; расстановка символов на дисплее
Symbol      movlw       0x80          ; курсор в пределах первой строки ( 0x80 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_up       ; стрелка вверх
            movlw       0x84          ; курсор в пределах первой строки ( 0x80 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_grad     ; "
            call        simb_pust     ; 777 simb_C        ; C
            movlw       0xC0          ; курсор в пределах второй строки ( 0xС0 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_down     ; стрелка вниз
            movlw       0xC4          ; курсор в пределах второй строки ( 0xC0 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_grad     ; "
            call        simb_pust     ; 777 simb_C        ; C
            return

; выводим на дисплей слово АВТ, и выводим на дисплей температуру для автоматического режима работы верхнего нагревателя (в градусах)
ABTh        movlw       0x86          ; 777 7          ; курсор в пределах первой строки ( 0x80 - начало ) 666
            call        LCD_com       ; загружаем команду
            call        simb_A        ; A
            call        simb_U        ; U 555 B
            call        simb_T        ; T
            call        simb_O        ; 777
            bsf         AV_R_H        ; ставим флаг (перевод в автоматический режим верхнего нагревателя)
            call        READs         ; 999 читаем уставку максимальной мощности для верхнего и нижнего нагревателя для автоматического режима работы
            call        OUTPUT_Th     ; выводим на дисплей поддерживаемую температуру термопары верхнего нагревателя для автоматического режима работы
            return

; выводим на дисплей слово РУЧ, и выводим на дисплей мощность для ручного режима работы верхнего нагревателя (в процентах)
RUCHh       movlw       0x86          ; 777 7          ; курсор в пределах первой строки ( 0x80 - начало ) 666
            call        LCD_com       ; загружаем команду
            call        simb_H        ; 555 P
            call        simb_A        ; 555 У
            call        simb_N        ; 555 Ч
            call        simb_D        ;
            bcf         AV_R_H        ; сбрасываем флаг (перевод в ручной режим верхнего нагревателя)
            call        OUTPUT_Ph     ; выводим на дисплей мощность верхнего нагревателя в процентах для ручного режима работы
            return

; выводим на дисплей слово АВТ, и выводим на дисплей температуру для автоматического режима работы нижнего нагревателя (в градусах)
ABTl        movlw       0xC6          ; 777 7          ; курсор в пределах второй строки ( 0xC0 - начало ) 666
            call        LCD_com       ; загружаем команду
            call        simb_A        ; A
            call        simb_U        ; U 555 B
            call        simb_T        ; T
            call        simb_O        ; 777
            bsf         AV_R_L        ; ставим флаг (перевод в автоматический режим нижнего нагревателя)
            call        READs         ; 999 читаем уставку максимальной мощности для верхнего и нижнего нагревателя для автоматического режима работы
            call        OUTPUT_Tl     ; выводим на дисплей поддерживаемую температуру термопары нижнего нагревателя для автоматического режима работы
            return

; выводим на дисплей слово РУЧ, и выводим на дисплей мощность для ручного режима работы нижнего нагревателя (в процентах)
RUCHl       movlw       0xC6          ; 777 7          ; курсор в пределах первой строки ( 0xC0 - начало ) 666
            call        LCD_com       ; загружаем команду
            call        simb_H        ; 555 P
            call        simb_A        ; 555 У
            call        simb_N        ; 555 Ч
            call        simb_D        ;
            bcf         AV_R_L        ; сбрасываем флаг (перевод в ручной режим нижнего нагревателя)
            call        OUTPUT_Pl     ; выводим на дисплей мощность нижнего нагревателя в процентах для ручного режима работы
            return

; выводим на дисплей слово ВКЛ, и включаем верхний нагреватель 
ONh         movlw       0x90          ; курсор в пределах первой строки ( 0x80 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_O        ; 555 B
            call        simb_N        ; 555 К
            call        simb_pust     ; 555 Л
            call        simb_pust     ; пустое знакоместо
            movlw       b'00001100'   ; включаем модуль CCP2
            movwf       CCP2CON       ; -//-
            bsf         ON_OFF_H      ; ставим флаг включения верхнего нагревателя
            return

; выводим на дисплей слово ВЫКЛ, и отключаем верхний нагреватель 
OFFh        movlw       0x90          ; курсор в пределах первой строки ( 0x80 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_O        ; 555 О
            call        simb_F        ; 555 T
            call        simb_F        ; 555 К
            call        simb_pust     ; 555 Л
            movlw       b'00000000'   ; выключаем модуль CCP2
            movwf       CCP2CON       ; -//-
            bcf         PORTC,1       ; отключаем верхний нагреватель
            bcf         ON_OFF_H      ; сбрасываем флаг включения верхнего нагревателя
            return

; выводим на дисплей слово ВКЛ, и включаем нижний нагреватель 
ONl         movlw       0xD0          ; курсор в пределах второй строки ( 0xC0 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_O        ; 555 B
            call        simb_N        ; 555 К
            call        simb_pust     ; 555 Л
            call        simb_pust     ; пустое знакоместо
            movlw       b'00001100'   ; включаем модуль CCP1
            movwf       CCP1CON       ; -//-
            bsf         ON_OFF_L      ; ставим флаг включения нижнего нагревателя
            return

; выводим на дисплей слово ВЫКЛ, и отключаем нижний нагреватель 
OFFl        movlw       0xD0          ; курсор в пределах второй строки ( 0xC0 - начало ) 666
            call        LCD_com       ; загружаем команду
            call        simb_O        ; 555 О
            call        simb_F        ; 555 T
            call        simb_F        ; 555 К
            call        simb_pust     ; 555 Л
            movlw       b'00000000'   ; выключаем модуль CCP1
            movwf       CCP1CON       ; -//-
            bcf         PORTC,2       ; отключаем нижний нагреватель
            bcf         ON_OFF_L      ; сбрасываем флаг включения нижнего нагревателя
            return

; выводим на дисплей слово ТЕРМОПРОФИЛЬ
T_PROF      movlw       0x95          ; курсор в пределах третьей строки ( 0x94 - начало ) 666
            call        LCD_com       ; загружаем команду
            call        simb_T        ; T
            call        simb_E        ; Е
            call        simb_M        ; 555 P
            call        simb_P        ; М
            call        simb_tire     ; О
            call        simb_P        ; 555 П
            call        simb_R        ; 555 P
            call        simb_O        ; О
            call        simb_F        ; F 555 Ф
            call        simb_I        ; 555 И
            call        simb_L        ; 555 Л
            call        simb_E        ; 555 Ь
            return

; выводим на дисплей слово ПУСК напротив ТЕРМОПРОФИЛЬ 
ON_PR       movlw       0xA4          ; курсор в пределах третьей строки ( 0x94 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_R        ; 555 П
            call        simb_U        ; 555 У
            call        simb_N        ; 555 C
            call        simb_pust     ; 555 К
            return

; выводим на дисплей слово СТОП напротив ТЕРМОПРОФИЛЬ 
OFF_PR      movlw       0xA4          ; курсор в пределах третьей строки ( 0x94 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_S        ; 555 C
            call        simb_T        ; T
            call        simb_O        ; О
            call        simb_P        ; 555 П
            return

; подпись 1 термопрофиля
T_PROF_1    call        Pb            ; выводим на дисплей надпись Pb+
            call        Tmax          ; выводим на дисплей надпись Tmax-
            movlw       0xE0          ; курсор в пределах четвертой строки ( 0xD4 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_1        ; 1
            call        simb_9        ; 9
            call        simb_0        ; 0
            call        simb_grad     ; "
            call        simb_pust     ; 777 C
            return

; подпись 2 термопрофиля
T_PROF_2    call        Pb            ; выводим на дисплей надпись Pb+
            call        Tmax          ; выводим на дисплей надпись Tmax-
            movlw       0xE0          ; курсор в пределах четвертой строки ( 0xD4 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_1        ; 1
            call        simb_9        ; 9
            call        simb_5        ; 5
            call        simb_grad     ; "
            call        simb_pust     ; 777 C
            return

; подпись 3 термопрофиля
T_PROF_3    call        Pb            ; выводим на дисплей надпись Pb+
            call        Tmax          ; выводим на дисплей надпись Tmax-
            movlw       0xE0          ; курсор в пределах четвертой строки ( 0xD4 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_2        ; 2
            call        simb_0        ; 0
            call        simb_0        ; 0
            call        simb_grad     ; "
            call        simb_pust     ; 777 C
            return

; подпись 4 термопрофиля
T_PROF_4    call        Pb            ; выводим на дисплей надпись Pb+
            call        Tmax          ; выводим на дисплей надпись Tmax-
            movlw       0xE0          ; курсор в пределах четвертой строки ( 0xD4 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_2        ; 2
            call        simb_0        ; 0
            call        simb_5        ; 5
            call        simb_grad     ; "
            call        simb_pust     ; 777 C
            return

; подпись 5 термопрофиля
T_PROF_5    call        Pb            ; выводим на дисплей надпись Pb+
            call        Tmax          ; выводим на дисплей надпись Tmax-
            movlw       0xE0          ; курсор в пределах четвертой строки ( 0xD4 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_2        ; 2
            call        simb_1        ; 1
            call        simb_0        ; 0
            call        simb_grad     ; "
            call        simb_pust     ; 777 C
            return

; подпись 6 термопрофиля
T_PROF_6    call        Pb            ; выводим на дисплей надпись Pb+
            call        Tmax          ; выводим на дисплей надпись Tmax-
            movlw       0xE0          ; курсор в пределах четвертой строки ( 0xD4 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_2        ; 2
            call        simb_1        ; 1
            call        simb_5        ; 5
            call        simb_grad     ; "
            call        simb_pust     ; 777 C
            return

; подпись 7 термопрофиля
T_PROF_7    call        Pb            ; выводим на дисплей надпись Pb+
            call        Tmax          ; выводим на дисплей надпись Tmax-
            movlw       0xE0          ; курсор в пределах четвертой строки ( 0xD4 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_2        ; 2
            call        simb_2        ; 2
            call        simb_0        ; 0
            call        simb_grad     ; "
            call        simb_pust     ; 777 C
            return

; подпись 8 термопрофиля
T_PROF_8    call        noPb          ; выводим на дисплей надпись Pb-
            call        Tmax          ; выводим на дисплей надпись Tmax-
            movlw       0xE0          ; курсор в пределах четвертой строки ( 0xD4 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_2        ; 2
            call        simb_2        ; 2
            call        simb_5        ; 5
            call        simb_grad     ; "
            call        simb_pust     ; 777 C
            return

; подпись 9 термопрофиля
T_PROF_9    call        noPb          ; выводим на дисплей надпись Pb-
            call        Tmax          ; выводим на дисплей надпись Tmax-
            movlw       0xE0          ; курсор в пределах четвертой строки ( 0xD4 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_2        ; 2
            call        simb_3        ; 3
            call        simb_0        ; 0
            call        simb_grad     ; "
            call        simb_pust     ; 777 C
            return

; подпись 10 термопрофиля
T_PROF_10   call        noPb          ; выводим на дисплей надпись Pb-
            call        Tmax          ; выводим на дисплей надпись Tmax-
            movlw       0xE0          ; курсор в пределах четвертой строки ( 0xD4 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_2        ; 2
            call        simb_3        ; 3
            call        simb_5        ; 5
            call        simb_grad     ; "
            call        simb_pust     ; 777 C
            return

; подпись 11 термопрофиля
T_PROF_11   call        noPb          ; выводим на дисплей надпись Pb-
            call        Tmax          ; выводим на дисплей надпись Tmax-
            movlw       0xE0          ; курсор в пределах четвертой строки ( 0xD4 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_2        ; 2
            call        simb_4        ; 4
            call        simb_0        ; 0
            call        simb_grad     ; "
            call        simb_pust     ; 777 C
            return

; подпись 12 термопрофиля
T_PROF_12   call        noPb          ; выводим на дисплей надпись Pb-
            call        Tmax          ; выводим на дисплей надпись Tmax-
            movlw       0xE0          ; курсор в пределах четвертой строки ( 0xD4 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_2        ; 2
            call        simb_4        ; 4
            call        simb_5        ; 5
            call        simb_grad     ; "
            call        simb_pust     ; 777 C
            return

; подпись 13 термопрофиля
T_PROF_13   call        noPb          ; выводим на дисплей надпись Pb-
            call        Tmax          ; выводим на дисплей надпись Tmax-
            movlw       0xE0          ; курсор в пределах четвертой строки ( 0xD4 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_2        ; 2
            call        simb_5        ; 5
            call        simb_0        ; 0
            call        simb_grad     ; "
            call        simb_pust     ; 777 C
            return

; подпись 14 термопрофиля
T_PROF_14   call        noPb          ; выводим на дисплей надпись Pb-
            call        Tmax          ; выводим на дисплей надпись Tmax-
            movlw       0xE0          ; курсор в пределах четвертой строки ( 0xD4 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_2        ; 2
            call        simb_5        ; 5
            call        simb_5        ; 5
            call        simb_grad     ; "
            call        simb_pust     ; 777 C
            return

; выводим на дисплей слово Pb+
Pb          movlw       0xD7          ; курсор в пределах четвертой строки ( 0xD4 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_P        ; P
            call        simb_b        ; Ь
            call        simb_plus     ; +
            return

; выводим на дисплей слово Pb-
noPb        movlw       0xD7          ; курсор в пределах четвертой строки ( 0xD4 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_P        ; P
            call        simb_b        ; Ь
            call        simb_tire     ; -
            return

; выводим на дисплей слово Tmax-
Tmax        movlw       0xDB          ; курсор в пределах четвертой строки ( 0xD4 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_T        ; T
            call        simb_m        ; m
            call        simb_a        ; a
            call        simb_x        ; x
            call        simb_equ      ; 777 tire     ; -
            return

; удаляем все метки
del_metka   movlw       0x85          ; 777 6          ; курсор в пределах первой строки ( 0x80 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_pust     ; пустое знакоместо
            movlw       0x8A          ; курсор в пределах первой строки ( 0x80 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_pust     ; пустое знакоместо
            movlw       0x8F          ; курсор в пределах первой строки ( 0x80 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_pust     ; пустое знакоместо
            movlw       0xC5          ; 777 6          ; курсор в пределах второй строки ( 0xC0 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_pust     ; пустое знакоместо
            movlw       0xCA          ; курсор в пределах второй строки ( 0xC0 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_pust     ; пустое знакоместо
            movlw       0xCF          ; курсор в пределах второй строки ( 0xC0 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_pust     ; пустое знакоместо
            movlw       0x94          ; курсор в пределах третьей строки ( 0x94 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_pust     ; пустое знакоместо
            return

; ставим первую метку
metka1      movlw       0x85          ; 777 6          ; курсор в пределах первой строки ( 0x80 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_kurs     ; >
            return

; ставим вторую метку
metka2      movlw       0x8A          ; курсор в пределах первой строки ( 0x80 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_kurs     ; >
            return

; ставим третью метку
metka3      movlw       0x8F          ; курсор в пределах первой строки ( 0x80 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_kurs     ; >
            return

; ставим четвертую метку
metka4      movlw       0xC5          ; 777 6          ; курсор в пределах второй строки ( 0xC0 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_kurs     ; >
            return

; ставим пятую метку
metka5      movlw       0xCA          ; курсор в пределах второй строки ( 0xC0 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_kurs     ; >
            return

; ставим шестую метку
metka6      movlw       0xCF          ; курсор в пределах второй строки ( 0xC0 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_kurs     ; >
            return

; ставим седьмую метку
metka7      movlw       0x94          ; курсор в пределах третьей строки ( 0x94 - начало ) 666
            call        LCD_com       ; загружаем команду 
            call        simb_kurs     ; >
            return


; короткий звуковой сигнал
BEEP        movlw       .120          ; константа продолжительности звукового сигнала
            movwf       Reg_tmp3
bss         call        del_500mcs
            BEEP_ON
            call        del_500mcs
            BEEP_OFF
            decfsz      Reg_tmp3,F
            goto        bss
            return 

; длинный звуковой сигнал
BEEEP       movlw       b'00000000'   ; выключаем модуль CCP2
            movwf       CCP2CON       ; -//-
            bcf         PORTC,1       ; отключаем верхний нагреватель во время звукового сигнала
            call        BEEP
            call        BEEP
            call        BEEP
            call        BEEP
            call        BEEP
            call        BEEP
            call        BEEP
            call        BEEP
            call        BEEP
            call        BEEP
            call        BEEP
            call        BEEP
            movlw       b'00001100'   ; включаем модуль CCP2, включаем верхний нагреватель после звукового сигнала
            movwf       CCP2CON       ; -//-
            return


; читаем данные из EEPROM выбора номера термопрофиля  
READ_EEP    
            clrwdt
            movlw       0             ; считывается содержимое EEPROM-ячейки с адресом 00h
            call        EEP_READ
            movwf       Reg_tmp_PR    ; W -> Reg_tmp_PR
; читаем данные из EEPROM выбор местоположения курсора
            movlw       1             ; считывается содержимое EEPROM-ячейки с адресом 01h
            call        EEP_READ
            movwf       kursor        ; W -> kursor
; читаем данные из EEPROM уставки вкл_откл, руч_авт
            movlw       2             ; считывается содержимое EEPROM-ячейки с адресом 02h
            call        EEP_READ
            movwf       Temmp         ; W -> Temmp
; читаем данные из EEPROM уставку температуры верхнего нагревателя для автоматического режима работы
            clrwdt
            movlw       3             ; считывается содержимое EEPROM-ячейки с адресом 03h
            call        EEP_READ
            movwf       T_h           ; W -> T_h
; читаем данные из EEPROM уставку мощности верхнего нагревателя для ручного режима работы
            movlw       4             ; считывается содержимое EEPROM-ячейки с адресом 04h
            call        EEP_READ
            movwf       P_h           ; W -> P_h
; читаем данные из EEPROM уставку температуры нижнего нагревателя для автоматического режима работы
            movlw       5             ; считывается содержимое EEPROM-ячейки с адресом 05h
            call        EEP_READ
            movwf       T_l           ; W -> T_l
; читаем данные из EEPROM уставку мощности нижнего нагревателя для ручного режима работы
            clrwdt
            movlw       6             ; считывается содержимое EEPROM-ячейки с адресом 06h
            call        EEP_READ
            movwf       P_l           ; W -> P_l
; читаем данные из EEPROM уставку максимальной мощности нижнего нагревателя для автоматического режима работы
READs       movlw       7             ; 999 считывается содержимое EEPROM-ячейки с адресом 07h
            call        EEP_READ
            movwf       Reg_T_TEMPll  ; W -> Reg_T_TEMPll
; читаем данные из EEPROM уставку максимальной мощности верхнего нагревателя для автоматического режима работы
            movlw       8             ; считывается содержимое EEPROM-ячейки с адресом 08h
            call        EEP_READ
            movwf       Reg_T_TEMPhh  ; W -> Reg_T_TEMPhh
            return
EEP_READ    
            banksel     EEADR         ; переходим в регистр EEADR
            movwf       EEADR         ; считываем EEPROM-ячейку
            banksel     EECON1        ; переходим в регистр EECON1
            bcf         EECON1,EEPGD  ; работа с EEPROM
            bsf         EECON1,RD     ; разрешение чтения
            banksel     EEDATA        ; переходим в регистр EEDATA
            movf        EEDATA,W      ; считанный байт записывается в W
            bcf         STATUS,RP0    ; переход в банк 0
            bcf         STATUS,RP1    ; -//-
            return

; записываем данные в EEPROM выбора номера термопрофиля  
WRITE_EEP
            clrwdt
            banksel     EEADR         ; переходим в регистр EEADR
            movlw       0             ; выбор адреса EEPROM-ячейки 
            movwf       EEADR         ; -//-
            bcf         STATUS,RP0    ; выбор 0-го банка
            bcf         STATUS,RP1    ; -//-
            movf        Reg_tmp_PR,W  ; Копирование данных, из Reg_tmp_PR
            call        EEP_WRITE
; записываем данные в EEPROM местоположение курсора 
            banksel     EEADR         ; переходим в регистр EEADR
            movlw       1             ; выбор адреса EEPROM-ячейки 
            movwf       EEADR         ; -//-
            bcf         STATUS,RP0    ; выбор 0-го банка
            bcf         STATUS,RP1    ; -//-
            movf        kursor,W      ; Копирование данных, kursor
            call        EEP_WRITE
; записываем данные в EEPROM уставки вкл_откл, руч_авт
            banksel     EEADR         ; переходим в регистр EEADR
            movlw       2             ; выбор адреса EEPROM-ячейки 
            movwf       EEADR         ; -//-
            bcf         STATUS,RP0    ; выбор 0-го банка
            bcf         STATUS,RP1    ; -//-
            movf        Temmp,W       ; Копирование данных, Temmp
            call        EEP_WRITE
; записываем данные в EEPROM уставку температуры верхнего нагревателя для автоматического режима работы
            clrwdt
            banksel     EEADR         ; переходим в регистр EEADR
            movlw       3             ; выбор адреса EEPROM-ячейки 
            movwf       EEADR         ; -//-
            bcf         STATUS,RP0    ; выбор 0-го банка
            bcf         STATUS,RP1    ; -//-
            movf        T_h,W         ; Копирование данных, T_h
            call        EEP_WRITE
; записываем данные в EEPROM уставку мощности верхнего нагревателя для ручного режима работы
            banksel     EEADR         ; переходим в регистр EEADR
            movlw       4             ; выбор адреса EEPROM-ячейки 
            movwf       EEADR         ; -//-
            bcf         STATUS,RP0    ; выбор 0-го банка
            bcf         STATUS,RP1    ; -//-
            movf        P_h,W         ; Копирование данных, P_h
            call        EEP_WRITE
; записываем данные в EEPROM уставку температуры нижнего нагревателя для автоматического режима работы
            banksel     EEADR         ; переходим в регистр EEADR
            movlw       5             ; выбор адреса EEPROM-ячейки 
            movwf       EEADR         ; -//-
            bcf         STATUS,RP0    ; выбор 0-го банка
            bcf         STATUS,RP1    ; -//-
            movf        T_l,W         ; Копирование данных, T_l
            call        EEP_WRITE
; записываем данные в EEPROM уставку мощности нижнего нагревателя для ручного режима работы
            clrwdt
            banksel     EEADR         ; переходим в регистр EEADR
            movlw       6             ; выбор адреса EEPROM-ячейки 
            movwf       EEADR         ; -//-
            bcf         STATUS,RP0    ; выбор 0-го банка
            bcf         STATUS,RP1    ; -//-
            movf        P_l,W         ; Копирование данных, P_l
            call        EEP_WRITE
            return
EEP_WRITE
            banksel     EEDATA        ; переходим в регистр EEDATA
            movwf       EEDATA        ; в регистр EEDATA
            banksel     EECON1        ; переходим в регистр EECON1 
            bcf         EECON1,EEPGD  ; работа с EEPROM
            bsf         EECON1,WREN   ; "глобальное" разрешение записи
            movlw       0x55          ; Обязательная последовательность команд
            movwf       EECON2        ; -//-
            movlw       0xAA          ; -//-
            movwf       EECON2        ; -//-
            bsf         EECON1,WR     ; "запуск в работу" аппаратной процедуры записи
            banksel     EECON1        ; переходим в регистр EECON1
            btfsc       EECON1,WR     ; запись завершена или нет?
            goto        $-1           ; если не завершена, то проверка производится снова
            bcf         EECON1,WREN   ; "глобальный" запрет записи
            bcf         STATUS,RP0    ; выбор 0-го банка
            bcf         STATUS,RP1    ; -//-
            return

del_500mcs  movlw       .151
            movwf       Reg_tmp1
            movlw       .3
            movwf       Reg_tmp2
wr          decfsz      Reg_tmp1,F
            goto        wr
            decfsz      Reg_tmp2,F
            goto        wr
            clrwdt
            return

del_40mcs   movlw       .53
            movwf       Reg_tmp1
wr4         decfsz      Reg_tmp1, F
            goto        wr4
            nop
            return

; ЗАДЕРЖКА 1 ms
del_1ms     movlw       .46
            movwf       Reg_tmp1
            movlw       .6
            movwf       Reg_tmp2
wr2         decfsz      Reg_tmp1, F
            goto        wr2
            decfsz      Reg_tmp2, F
            goto        wr2
            clrwdt
            return     

; ЗАДЕРЖКА 5 ms 
del_5ms     call        del_1ms
            call        del_1ms
            call        del_1ms
            call        del_1ms
            call        del_1ms
            return

; ЗАДЕРЖКА 50 ms
del_50ms    movlw       .186
            movwf       Reg_tmp1
            movlw       .4
            movwf       Reg_tmp2
            movlw       .2
            movwf       Reg_tmp3
wr3         decfsz      Reg_tmp1, F
            goto        wr3
            decfsz      Reg_tmp2, F   
            goto        wr3
            decfsz      Reg_tmp3, F
            goto        wr3
            clrwdt
            return

; ЗАДЕРЖКА 100 ms 
del_100ms   call        del_50ms
            call        del_50ms
            return

; ЗАДЕРЖКА 1 s
del_1s      call        del_100ms
            call        del_100ms
            call        del_100ms
            call        del_100ms
            call        del_100ms
            call        del_100ms
            call        del_100ms
            call        del_100ms
            call        del_100ms
            call        del_100ms
            return

simb_0      movlw       0x30          ; 0
            call        LCD_dig       ; загружаем данные
            return
simb_1      movlw       0x31          ; 1
            call        LCD_dig       ; загружаем данные
            return
simb_2      movlw       0x32          ; 2
            call        LCD_dig       ; загружаем данные
            return
simb_3      movlw       0x33          ; 3
            call        LCD_dig       ; загружаем данные
            return
simb_4      movlw       0x34          ; 4
            call        LCD_dig       ; загружаем данные
            return
simb_5      movlw       0x35          ; 5
            call        LCD_dig       ; загружаем данные
            return
simb_9      movlw       0x39          ; 9
            call        LCD_dig       ; загружаем данные
            return
simb_tire   movlw       0x2D          ; -
            call        LCD_dig       ; загружаем данные
            return
simb_equ    movlw       0x3D          ; = 555
            call        LCD_dig       ; загружаем данные 555
            return                    ; 555
simb_plus   movlw       0x2B          ; +
            call        LCD_dig       ; загружаем данные
            return
simb_kurs   movlw       0x3E          ; >
            call        LCD_dig       ; загружаем данные
            return
simb_pust   movlw       0x20          ; пустое знакоместо
            call        LCD_dig       ; загружаем данные
            return
simb_proc   movlw       0x25          ; %
            call        LCD_dig       ; загружаем данные
            return
simb_grad   movlw       0x02          ; 777 DF          ; "
            call        LCD_dig       ; загружаем данные
            return
simb_up     movlw       0x00          ; 777 0xD9          ; стрелка вверх
            call        LCD_dig       ; загружаем данные
            return
simb_down   movlw       0x01          ; 777 0xDA          ; стрелка вниз
            call        LCD_dig       ; загружаем данные
            return
simb_A      movlw       0x41          ; A
            call        LCD_dig       ; загружаем данные
            return
simb_B      movlw       0x42          ; B
            call        LCD_dig       ; загружаем данные
            return
simb_C      movlw       0x43          ; C
            call        LCD_dig       ; загружаем данные
            return
simb_D      movlw       0x44          ; D
            call        LCD_dig       ; загружаем данные
            return
simb_E      movlw       0x45          ; E
            call        LCD_dig       ; загружаем данные
            return
simb_F      movlw       0x46          ; F
            call        LCD_dig       ; загружаем данные
            return
simb_H      movlw       0x48          ; H
            call        LCD_dig       ; загружаем данные
            return
simb_I      movlw       0x49          ; I
            call        LCD_dig       ; загружаем данные
            return
simb_K      movlw       0x4B          ; K
            call        LCD_dig       ; загружаем данные
            return
simb_L      movlw       0x4C          ; L
            call        LCD_dig       ; загружаем данные
            return
simb_M      movlw       0x4D          ; M
            call        LCD_dig       ; загружаем данные
            return
simb_N      movlw       0x4E          ; N
            call        LCD_dig       ; загружаем данные
            return
simb_O      movlw       0x4F          ; O
            call        LCD_dig       ; загружаем данные
            return
simb_P      movlw       0x50          ; P
            call        LCD_dig       ; загружаем данные
            return
simb_R      movlw       0x52          ; 555 R
            call        LCD_dig       ; 555 загружаем данные
            return                    ; 555
simb_S      movlw       0x53          ; S
            call        LCD_dig       ; загружаем данные
            return
simb_T      movlw       0x54          ; T
            call        LCD_dig       ; загружаем данные
            return
simb_U      movlw       0x55          ; U
            call        LCD_dig       ; загружаем данные
            return
simb_a      movlw       0x61          ; a
            call        LCD_dig       ; загружаем данные
            return
simb_b      movlw       0x62          ; b
            call        LCD_dig       ; загружаем данные
            return
simb_k      movlw       0x6B          ; k
            call        LCD_dig       ; загружаем данные
            return
simb_m      movlw       0x6D          ; m
            call        LCD_dig       ; загружаем данные
            return
simb_r      movlw       0x72          ; r
            call        LCD_dig       ; загружаем данные
            return
simb_t      movlw       0x74          ; t
            call        LCD_dig       ; загружаем данные
            return
simb_x      movlw       0x78          ; x
            call        LCD_dig       ; загружаем данные
            return
; 555 simb_rus_I  movlw       0xA5          ; И
; 555             call        LCD_dig       ; загружаем данные
; 555             return
; 555 simb_rus_L  movlw       0xA7          ; Л
; 555             call        LCD_dig       ; загружаем данные
; 555             return
; 555 simb_rus_P  movlw       0xA8          ; П
; 555             call        LCD_dig       ; загружаем данные
; 555             return
; 555 simb_rus_Y  movlw       0xA9          ; У
; 555             call        LCD_dig       ; загружаем данные
; 555             return
; 555 simb_rus_F  movlw       0xAA          ; Ф
; 555             call        LCD_dig       ; загружаем данные
; 555             return
; 555 simb_rus_CH movlw       0xAB          ; Ч
; 555             call        LCD_dig       ; загружаем данные
; 555             return

;########################################################################################################################################################
; 2 Страница памяти программ
TPR ; работа по термопрофилю
            org         0x800         ; переход на 2 страницу памяти программ
            bcf         PCLATH, 4     ; выбор 2 страницы памяти программ
            bsf         PCLATH, 3     ; -//-
            bsf         PROPUSK       ; 999 поднимаем флаг необходимости пропуска термопрофиля, пока температура не достигнет заданного значения (1-пропуск требуется)
            movf        Reg_tmp_PR,W  ; копируем в W содержимое Reg_tmp_PR
            andlw       b'00001111'   ; маскируем старший полубайт W (обнуляем 4 старших байта)
            addwf       PCL,f         ; содержимое счетчика команд PC увеличивается на величину содержимого аккумулятора W
            nop
            goto        T_PROFF_1     ; 1 термопрофиль
            goto        T_PROFF_2     ; 2 термопрофиль
            goto        T_PROFF_3     ; 3 термопрофиль
            goto        T_PROFF_4     ; 4 термопрофиль
            goto        T_PROFF_5     ; 5 термопрофиль
            goto        T_PROFF_6     ; 6 термопрофиль
            goto        T_PROFF_7     ; 7 термопрофиль
            goto        T_PROFF_8     ; 8 термопрофиль
            goto        T_PROFF_9     ; 9 термопрофиль
            goto        T_PROFF_10    ; 10 термопрофиль
            goto        T_PROFF_11    ; 11 термопрофиль
            goto        T_PROFF_12    ; 12 термопрофиль
            goto        T_PROFF_13    ; 13 термопрофиль
            lgoto       T_PROFF_14    ; 14 термопрофиль

T_PROFF_1 ; работа по 1 термопрофилю Tmax - 190 "C продолжительность 15 сек
            lcall       ress         ; подготовительные операции, расстановка символов
            lcall       PREDNAGREV_1 ; предварительный нагрев 1-120 сек T=30-150"C
            lcall       PREDNAGREV_2_Pb ; предварительный нагрев 2 для Pb+ 120-210 сек T=150-180"C
            movlw       .181          ;211 сек
            lcall       T_UST
            movlw       .182          ;212 сек
            lcall       T_UST
            movlw       .183          ;213 сек
            lcall       T_UST
            movlw       .184          ;214 сек
            lcall       T_UST
            movlw       .185          ;215 сек
            lcall       T_UST
            movlw       .186          ;216 сек
            lcall       T_UST
            movlw       .187          ;217 сек
            lcall       T_UST
            movlw       .188          ;218 сек
            lcall       T_UST
            movlw       .189          ;219 сек
            lcall       T_UST
            movlw       .190          ;220 сек
            lcall       T_UST
            movlw       .190          ;221 сек
            lcall       T_UST
            movlw       .190          ;222 сек
            lcall       T_UST
            movlw       .190          ;223 сек
            lcall       T_UST
            movlw       .190          ;224 сек
            lcall       T_UST
            movlw       .190          ;225 сек
            lcall       T_UST
            movlw       .190          ;226 сек
            lcall       T_UST
            movlw       .190          ;227 сек
            lcall       T_UST
            movlw       .190          ;228 сек
            lcall       T_UST
            movlw       .190          ;229 сек
            lcall       T_UST
            lcall       BEEEP         ; длинный звуковой сигнал
            movlw       .190          ;230 сек
            lcall       T_UST
            movlw       .190          ;231 сек
            lcall       T_UST
            movlw       .190          ;232 сек
            lcall       T_UST
            movlw       .190          ;233 сек
            lcall       T_UST
            movlw       .190          ;234 сек
            lcall       T_UST
            movlw       .187          ;235 сек
            lcall       T_UST
            movlw       .184          ;236 сек
            lcall       T_UST
            lcall       OHLAZHDENIE_Pb ; охлаждение для Pb+ T=180-120"C
            lcall       OFFh          ; отключаем верхний нагреватель
            lgoto       Go            ; возврат в основной цикл программы 

T_PROFF_2 ; работа по 2 термопрофилю Tmax - 195 "C продолжительность 15 сек
            lcall       ress         ; подготовительные операции, расстановка символов
            lcall       PREDNAGREV_1 ; предварительный нагрев 1-120 сек T=30-150"C
            lcall       PREDNAGREV_2_Pb ; предварительный нагрев 2 для Pb+ 120-210 сек T=150-180"C
            movlw       .182          ;211 сек
            lcall       T_UST
            movlw       .184          ;212 сек
            lcall       T_UST
            movlw       .186          ;213 сек
            lcall       T_UST
            movlw       .188          ;214 сек
            lcall       T_UST
            movlw       .190          ;215 сек
            lcall       T_UST
            movlw       .192          ;216 сек
            lcall       T_UST
            movlw       .194          ;217 сек
            lcall       T_UST
            movlw       .195          ;218 сек
            lcall       T_UST
            movlw       .195          ;219 сек
            lcall       T_UST
            movlw       .195          ;220 сек
            lcall       T_UST
            movlw       .195          ;221 сек
            lcall       T_UST
            movlw       .195          ;222 сек
            lcall       T_UST
            movlw       .195          ;223 сек
            lcall       T_UST
            movlw       .195          ;224 сек
            lcall       T_UST
            movlw       .195          ;225 сек
            lcall       T_UST
            movlw       .195          ;226 сек
            lcall       T_UST
            movlw       .195          ;227 сек
            lcall       T_UST
            lcall       BEEEP         ; длинный звуковой сигнал
            movlw       .195          ;228 сек
            lcall       T_UST
            movlw       .195          ;229 сек
            lcall       T_UST
            movlw       .195          ;230 сек
            lcall       T_UST
            movlw       .195          ;231 сек
            lcall       T_UST
            movlw       .195          ;232 сек
            lcall       T_UST
            movlw       .192          ;233 сек
            lcall       T_UST
            movlw       .189          ;234 сек
            lcall       T_UST
            movlw       .186          ;235 сек
            lcall       T_UST
            movlw       .183          ;236 сек
            lcall       T_UST
            lcall       OHLAZHDENIE_Pb ; охлаждение для Pb+ T=180-120"C
            lcall       OFFh          ; отключаем верхний нагреватель
            lgoto       Go            ; возврат в основной цикл программы 

T_PROFF_3 ; работа по 3 термопрофилю Tmax - 200 "C продолжительность 15 сек
            lcall       ress         ; подготовительные операции, расстановка символов
            lcall       PREDNAGREV_1 ; предварительный нагрев 1-120 сек T=30-150"C
            lcall       PREDNAGREV_2_Pb ; предварительный нагрев 2 для Pb+ 120-210 сек T=150-180"C
            movlw       .182          ;211 сек
            lcall       T_UST
            movlw       .184          ;212 сек
            lcall       T_UST
            movlw       .186          ;213 сек
            lcall       T_UST
            movlw       .188          ;214 сек
            lcall       T_UST
            movlw       .190          ;215 сек
            lcall       T_UST
            movlw       .192          ;216 сек
            lcall       T_UST
            movlw       .194          ;217 сек
            lcall       T_UST
            movlw       .196          ;218 сек
            lcall       T_UST
            movlw       .198          ;219 сек
            lcall       T_UST
            movlw       .200          ;220 сек
            lcall       T_UST
            movlw       .200          ;221 сек
            lcall       T_UST
            movlw       .200          ;222 сек
            lcall       T_UST
            movlw       .200          ;223 сек
            lcall       T_UST
            movlw       .200          ;224 сек
            lcall       T_UST
            movlw       .200          ;225 сек
            lcall       T_UST
            movlw       .200          ;226 сек
            lcall       T_UST
            movlw       .200          ;227 сек
            lcall       T_UST
            movlw       .200          ;228 сек
            lcall       T_UST
            movlw       .200          ;229 сек
            lcall       T_UST
            lcall       BEEEP         ; длинный звуковой сигнал
            movlw       .200          ;230 сек
            lcall       T_UST
            movlw       .200          ;231 сек
            lcall       T_UST
            movlw       .200          ;232 сек
            lcall       T_UST
            movlw       .200          ;233 сек
            lcall       T_UST
            movlw       .200          ;234 сек
            lcall       T_UST
            movlw       .197          ;235 сек
            lcall       T_UST
            movlw       .194          ;236 сек
            lcall       T_UST
            movlw       .191          ;237 сек
            lcall       T_UST
            movlw       .188          ;238 сек
            lcall       T_UST
            movlw       .185          ;239 сек
            lcall       T_UST
            movlw       .182          ;240 сек
            lcall       T_UST
            lcall       OHLAZHDENIE_Pb ; охлаждение для Pb+ T=180-120"C
            lcall       OFFh          ; отключаем верхний нагреватель
            lgoto       Go            ; возврат в основной цикл программы 

T_PROFF_4 ; работа по 4 термопрофилю Tmax - 205 "C продолжительность 15 сек
            lcall       ress         ; подготовительные операции, расстановка символов
            lcall       PREDNAGREV_1 ; предварительный нагрев 1-120 сек T=30-150"C
            lcall       PREDNAGREV_2_Pb ; предварительный нагрев 2 для Pb+ 120-210 сек T=150-180"C
            movlw       .182          ;211 сек
            lcall       T_UST
            movlw       .184          ;212 сек
            lcall       T_UST
            movlw       .186          ;213 сек
            lcall       T_UST
            movlw       .188          ;214 сек
            lcall       T_UST
            movlw       .190          ;215 сек
            lcall       T_UST
            movlw       .192          ;216 сек
            lcall       T_UST
            movlw       .194          ;217 сек
            lcall       T_UST
            movlw       .196          ;218 сек
            lcall       T_UST
            movlw       .198          ;219 сек
            lcall       T_UST
            movlw       .200          ;220 сек
            lcall       T_UST
            movlw       .202          ;221 сек
            lcall       T_UST
            movlw       .204          ;222 сек
            lcall       T_UST
            movlw       .205          ;223 сек
            lcall       T_UST
            movlw       .205          ;224 сек
            lcall       T_UST
            movlw       .205          ;225 сек
            lcall       T_UST
            movlw       .205          ;226 сек
            lcall       T_UST
            movlw       .205          ;227 сек
            lcall       T_UST
            movlw       .205          ;228 сек
            lcall       T_UST
            movlw       .205          ;229 сек
            lcall       T_UST
            movlw       .205          ;230 сек
            lcall       T_UST
            movlw       .205          ;231 сек
            lcall       T_UST
            movlw       .205          ;232 сек
            lcall       T_UST
            lcall       BEEEP         ; длинный звуковой сигнал
            movlw       .205          ;233 сек
            lcall       T_UST
            movlw       .205          ;234 сек
            lcall       T_UST
            movlw       .205          ;235 сек
            lcall       T_UST
            movlw       .205          ;236 сек
            lcall       T_UST
            movlw       .205          ;237 сек
            lcall       T_UST
            movlw       .202          ;238 сек
            lcall       T_UST
            movlw       .199          ;239 сек
            lcall       T_UST
            movlw       .196          ;240 сек
            lcall       T_UST
            movlw       .193          ;241 сек
            lcall       T_UST
            movlw       .190          ;242 сек
            lcall       T_UST
            movlw       .187          ;243 сек
            lcall       T_UST
            movlw       .183          ;244 сек
            lcall       T_UST
            lcall       OHLAZHDENIE_Pb ; охлаждение для Pb+ T=180-120"C
            lcall       OFFh          ; отключаем верхний нагреватель
            lgoto       Go            ; возврат в основной цикл программы 

T_PROFF_5 ; работа по 5 термопрофилю Tmax - 210 "C продолжительность 15 сек
            lcall       ress         ; подготовительные операции, расстановка символов
            lcall       PREDNAGREV_1 ; предварительный нагрев 1-120 сек T=30-150"C
            lcall       PREDNAGREV_2_Pb ; предварительный нагрев 2 для Pb+ 120-210 сек T=150-180"C
            movlw       .182          ;211 сек
            lcall       T_UST
            movlw       .184          ;212 сек
            lcall       T_UST
            movlw       .186          ;213 сек
            lcall       T_UST
            movlw       .188          ;214 сек
            lcall       T_UST
            movlw       .190          ;215 сек
            lcall       T_UST
            movlw       .192          ;216 сек
            lcall       T_UST
            movlw       .194          ;217 сек
            lcall       T_UST
            movlw       .196          ;218 сек
            lcall       T_UST
            movlw       .198          ;219 сек
            lcall       T_UST
            movlw       .200          ;220 сек
            lcall       T_UST
            movlw       .202          ;221 сек
            lcall       T_UST
            movlw       .204          ;222 сек
            lcall       T_UST
            movlw       .206          ;223 сек
            lcall       T_UST
            movlw       .208          ;224 сек
            lcall       T_UST
            movlw       .210          ;225 сек
            lcall       T_UST
            movlw       .210          ;226 сек
            lcall       T_UST
            movlw       .210          ;227 сек
            lcall       T_UST
            movlw       .210          ;228 сек
            lcall       T_UST
            movlw       .210          ;229 сек
            lcall       T_UST
            movlw       .210          ;230 сек
            lcall       T_UST
            movlw       .210          ;231 сек
            lcall       T_UST
            movlw       .210          ;232 сек
            lcall       T_UST
            movlw       .210          ;233 сек
            lcall       T_UST
            movlw       .210          ;234 сек
            lcall       T_UST
            lcall       BEEEP         ; длинный звуковой сигнал
            movlw       .210          ;235 сек
            lcall       T_UST
            movlw       .210          ;236 сек
            lcall       T_UST
            movlw       .210          ;237 сек
            lcall       T_UST
            movlw       .210          ;238 сек
            lcall       T_UST
            movlw       .210          ;239 сек
            lcall       T_UST
            movlw       .207          ;240 сек
            lcall       T_UST
            movlw       .204          ;241 сек
            lcall       T_UST
            movlw       .201          ;242 сек
            lcall       T_UST
            movlw       .198          ;243 сек
            lcall       T_UST
            movlw       .195          ;244 сек
            lcall       T_UST
            movlw       .192          ;245 сек
            lcall       T_UST
            movlw       .189          ;246 сек
            lcall       T_UST
            movlw       .186          ;247 сек
            lcall       T_UST
            movlw       .183          ;248 сек
            lcall       T_UST
            lcall       OHLAZHDENIE_Pb ; охлаждение для Pb+ T=180-120"C
            lcall       OFFh          ; отключаем верхний нагреватель
            lgoto       Go            ; возврат в основной цикл программы 

T_PROFF_6 ; работа по 6 термопрофилю Tmax - 215 "C продолжительность 15 сек
            lcall       ress         ; подготовительные операции, расстановка символов
            lcall       PREDNAGREV_1 ; предварительный нагрев 1-120 сек T=30-150"C
            lcall       PREDNAGREV_2_Pb ; предварительный нагрев 2 для Pb+ 120-210 сек T=150-180"C
            movlw       .182          ;211 сек
            lcall       T_UST
            movlw       .184          ;212 сек
            lcall       T_UST
            movlw       .186          ;213 сек
            lcall       T_UST
            movlw       .188          ;214 сек
            lcall       T_UST
            movlw       .190          ;215 сек
            lcall       T_UST
            movlw       .192          ;216 сек
            lcall       T_UST
            movlw       .194          ;217 сек
            lcall       T_UST
            movlw       .196          ;218 сек
            lcall       T_UST
            movlw       .198          ;219 сек
            lcall       T_UST
            movlw       .200          ;220 сек
            lcall       T_UST
            movlw       .202          ;221 сек
            lcall       T_UST
            movlw       .204          ;222 сек
            lcall       T_UST
            movlw       .206          ;223 сек
            lcall       T_UST
            movlw       .208          ;224 сек
            lcall       T_UST
            movlw       .210          ;225 сек
            lcall       T_UST
            movlw       .212          ;226 сек
            lcall       T_UST
            movlw       .214          ;227 сек
            lcall       T_UST
            movlw       .215          ;228 сек
            lcall       T_UST
            movlw       .215          ;229 сек
            lcall       T_UST
            movlw       .215          ;230 сек
            lcall       T_UST
            movlw       .215          ;231 сек
            lcall       T_UST
            movlw       .215          ;232 сек
            lcall       T_UST
            movlw       .215          ;233 сек
            lcall       T_UST
            movlw       .215          ;234 сек
            lcall       T_UST
            movlw       .215          ;235 сек
            lcall       T_UST
            movlw       .215          ;236 сек
            lcall       T_UST
            movlw       .215          ;237 сек
            lcall       T_UST
            lcall       BEEEP         ; длинный звуковой сигнал
            movlw       .215          ;238 сек
            lcall       T_UST
            movlw       .215          ;239 сек
            lcall       T_UST
            movlw       .215          ;240 сек
            lcall       T_UST
            movlw       .215          ;241 сек
            lcall       T_UST
            movlw       .215          ;242 сек
            lcall       T_UST
            movlw       .212          ;243 сек
            lcall       T_UST
            movlw       .209          ;244 сек
            lcall       T_UST
            movlw       .206          ;245 сек
            lcall       T_UST
            movlw       .203          ;246 сек
            lcall       T_UST
            movlw       .200          ;247 сек
            lcall       T_UST
            movlw       .197          ;248 сек
            lcall       T_UST
            movlw       .194          ;249 сек
            lcall       T_UST
            movlw       .191          ;250 сек
            lcall       T_UST
            movlw       .188          ;251 сек
            lcall       T_UST
            movlw       .185          ;252 сек
            lcall       T_UST
            movlw       .182          ;253 сек
            lcall       T_UST
            lcall       OHLAZHDENIE_Pb ; охлаждение для Pb+ T=180-120"C
            lcall       OFFh          ; отключаем верхний нагреватель
            lgoto       Go            ; возврат в основной цикл программы 

T_PROFF_7 ; работа по 7 термопрофилю Tmax - 220 "C продолжительность 15 сек
            lcall       ress         ; подготовительные операции, расстановка символов
            lcall       PREDNAGREV_1 ; предварительный нагрев 1-120 сек T=30-150"C
            lcall       PREDNAGREV_2_Pb ; предварительный нагрев 2 для Pb+ 120-210 сек T=150-180"C
            movlw       .182          ;211 сек
            lcall       T_UST
            movlw       .184          ;212 сек
            lcall       T_UST
            movlw       .186          ;213 сек
            lcall       T_UST
            movlw       .188          ;214 сек
            lcall       T_UST
            movlw       .190          ;215 сек
            lcall       T_UST
            movlw       .192          ;216 сек
            lcall       T_UST
            movlw       .194          ;217 сек
            lcall       T_UST
            movlw       .196          ;218 сек
            lcall       T_UST
            movlw       .198          ;219 сек
            lcall       T_UST
            movlw       .200          ;220 сек
            lcall       T_UST
            movlw       .202          ;221 сек
            lcall       T_UST
            movlw       .204          ;222 сек
            lcall       T_UST
            movlw       .206          ;223 сек
            lcall       T_UST
            movlw       .208          ;224 сек
            lcall       T_UST
            movlw       .210          ;225 сек
            lcall       T_UST
            movlw       .212          ;226 сек
            lcall       T_UST
            movlw       .214          ;227 сек
            lcall       T_UST
            movlw       .216          ;228 сек
            lcall       T_UST
            movlw       .218          ;229 сек
            lcall       T_UST
            movlw       .220          ;230 сек
            lcall       T_UST
            movlw       .220          ;231 сек
            lcall       T_UST
            movlw       .220          ;232 сек
            lcall       T_UST
            movlw       .220          ;233 сек
            lcall       T_UST
            movlw       .220          ;234 сек
            lcall       T_UST
            movlw       .220          ;235 сек
            lcall       T_UST
            movlw       .220          ;236 сек
            lcall       T_UST
            movlw       .220          ;237 сек
            lcall       T_UST
            movlw       .220          ;238 сек
            lcall       T_UST
            movlw       .220          ;239 сек
            lcall       T_UST
            lcall       BEEEP         ; длинный звуковой сигнал
            movlw       .220          ;240 сек
            lcall       T_UST
            movlw       .220          ;241 сек
            lcall       T_UST
            movlw       .220          ;242 сек
            lcall       T_UST
            movlw       .220          ;243 сек
            lcall       T_UST
            movlw       .220          ;244 сек
            lcall       T_UST
            movlw       .217          ;245 сек
            lcall       T_UST
            movlw       .214          ;246 сек
            lcall       T_UST
            movlw       .211          ;247 сек
            lcall       T_UST
            movlw       .208          ;248 сек
            lcall       T_UST
            movlw       .205          ;249 сек
            lcall       T_UST
            movlw       .202          ;250 сек
            lcall       T_UST
            movlw       .198          ;251 сек
            lcall       T_UST
            movlw       .195          ;252 сек
            lcall       T_UST
            movlw       .192          ;253 сек
            lcall       T_UST
            movlw       .189          ;254 сек
            lcall       T_UST
            movlw       .186          ;255 сек
            lcall       T_UST
            movlw       .183          ;256 сек
            lcall       T_UST
            lcall       OHLAZHDENIE_Pb ; охлаждение для Pb+ T=180-120"C
            lcall       OFFh          ; отключаем верхний нагреватель
            lgoto       Go            ; возврат в основной цикл программы 

T_PROFF_8 ; работа по 8 термопрофилю Tmax - 225 "C продолжительность 15 сек
            lcall       ress         ; подготовительные операции, расстановка символов
            lcall       PREDNAGREV_1 ; предварительный нагрев 1-120 сек T=30-150"C
            lcall       PREDNAGREV_2_noPb ; предварительный нагрев 2 для Pb- 120-210 сек T=150-220"C
            movlw       .222          ;211 сек
            lcall       T_UST
            movlw       .224          ;212 сек
            lcall       T_UST
            movlw       .225          ;213 сек
            lcall       T_UST
            movlw       .225          ;214 сек
            lcall       T_UST
            movlw       .225          ;215 сек
            lcall       T_UST
            movlw       .225          ;216 сек
            lcall       T_UST
            movlw       .225          ;217 сек
            lcall       T_UST
            movlw       .225          ;218 сек
            lcall       T_UST
            movlw       .225          ;219 сек
            lcall       T_UST
            movlw       .225          ;220 сек
            lcall       T_UST
            movlw       .225          ;221 сек
            lcall       T_UST
            movlw       .225          ;222 сек
            lcall       T_UST
            lcall       BEEEP         ; длинный звуковой сигнал
            movlw       .225          ;223 сек
            lcall       T_UST
            movlw       .225          ;224 сек
            lcall       T_UST
            movlw       .225          ;225 сек
            lcall       T_UST
            movlw       .225          ;226 сек
            lcall       T_UST
            movlw       .225          ;227 сек
            lcall       T_UST
            movlw       .222          ;228 сек
            lcall       T_UST
            lcall       OHLAZHDENIE_noPb ; охлаждение для Pb+ T=220-120"C
            lcall       OFFh          ; отключаем верхний нагреватель
            lgoto       Go            ; возврат в основной цикл программы 

T_PROFF_9 ; работа по 9 термопрофилю Tmax - 230 "C продолжительность 15 сек
            lcall       ress         ; подготовительные операции, расстановка символов
            lcall       PREDNAGREV_1 ; предварительный нагрев 1-120 сек T=30-150"C
            lcall       PREDNAGREV_2_noPb ; предварительный нагрев 2 для Pb- 120-210 сек T=150-220"C
            movlw       .222          ;211 сек
            lcall       T_UST
            movlw       .224          ;212 сек
            lcall       T_UST
            movlw       .226          ;213 сек
            lcall       T_UST
            movlw       .228          ;214 сек
            lcall       T_UST
            movlw       .230          ;215 сек
            lcall       T_UST
            movlw       .230          ;216 сек
            lcall       T_UST
            movlw       .230          ;217 сек
            lcall       T_UST
            movlw       .230          ;218 сек
            lcall       T_UST
            movlw       .230          ;219 сек
            lcall       T_UST
            movlw       .230          ;220 сек
            lcall       T_UST
            movlw       .230          ;221 сек
            lcall       T_UST
            movlw       .230          ;222 сек
            lcall       T_UST
            movlw       .230          ;223 сек
            lcall       T_UST
            movlw       .230          ;224 сек
            lcall       T_UST
            lcall       BEEEP         ; длинный звуковой сигнал
            movlw       .230          ;225 сек
            lcall       T_UST
            movlw       .230          ;226 сек
            lcall       T_UST
            movlw       .230          ;227 сек
            lcall       T_UST
            movlw       .230          ;228 сек
            lcall       T_UST
            movlw       .230          ;229 сек
            lcall       T_UST
            movlw       .227          ;230 сек
            lcall       T_UST
            movlw       .224          ;231 сек
            lcall       T_UST
            movlw       .221          ;232 сек
            lcall       T_UST
            lcall       OHLAZHDENIE_noPb ; охлаждение для Pb+ T=220-120"C
            lcall       OFFh          ; отключаем верхний нагреватель
            lgoto       Go            ; возврат в основной цикл программы 

T_PROFF_10 ; работа по 10 термопрофилю Tmax - 235 "C продолжительность 15 сек
            lcall       ress         ; подготовительные операции, расстановка символов
            lcall       PREDNAGREV_1 ; предварительный нагрев 1-120 сек T=30-150"C
            lcall       PREDNAGREV_2_noPb ; предварительный нагрев 2 для Pb- 120-210 сек T=150-220"C
            movlw       .222          ;211 сек
            lcall       T_UST
            movlw       .224          ;212 сек
            lcall       T_UST
            movlw       .226          ;213 сек
            lcall       T_UST
            movlw       .228          ;214 сек
            lcall       T_UST
            movlw       .230          ;215 сек
            lcall       T_UST
            movlw       .232          ;216 сек
            lcall       T_UST
            movlw       .234          ;217 сек
            lcall       T_UST
            movlw       .235          ;218 сек
            lcall       T_UST
            movlw       .235          ;219 сек
            lcall       T_UST
            movlw       .235          ;220 сек
            lcall       T_UST
            movlw       .235          ;221 сек
            lcall       T_UST
            movlw       .235          ;222 сек
            lcall       T_UST
            movlw       .235          ;223 сек
            lcall       T_UST
            movlw       .235          ;224 сек
            lcall       T_UST
            movlw       .235          ;225 сек
            lcall       T_UST
            movlw       .235          ;226 сек
            lcall       T_UST
            movlw       .235          ;227 сек
            lcall       T_UST
            lcall       BEEEP         ; длинный звуковой сигнал
            movlw       .235          ;228 сек
            lcall       T_UST
            movlw       .235          ;229 сек
            lcall       T_UST
            movlw       .235          ;230 сек
            lcall       T_UST
            movlw       .235          ;231 сек
            lcall       T_UST
            movlw       .235          ;232 сек
            lcall       T_UST
            movlw       .232          ;233 сек
            lcall       T_UST
            movlw       .229          ;234 сек
            lcall       T_UST
            movlw       .226          ;235 сек
            lcall       T_UST
            movlw       .223          ;236 сек
            lcall       T_UST
            movlw       .220          ;237 сек
            lcall       T_UST
            lcall       OHLAZHDENIE_noPb ; охлаждение для Pb+ T=220-120"C
            lcall       OFFh          ; отключаем верхний нагреватель
            lgoto       Go            ; возврат в основной цикл программы 

T_PROFF_11 ; работа по 11 термопрофилю Tmax - 240 "C продолжительность 15 сек
            lcall       ress         ; подготовительные операции, расстановка символов
            lcall       PREDNAGREV_1 ; предварительный нагрев 1-120 сек T=30-150"C
            lcall       PREDNAGREV_2_noPb ; предварительный нагрев 2 для Pb- 120-210 сек T=150-220"C
            movlw       .222          ;211 сек
            lcall       T_UST
            movlw       .224          ;212 сек
            lcall       T_UST
            movlw       .226          ;213 сек
            lcall       T_UST
            movlw       .228          ;214 сек
            lcall       T_UST
            movlw       .230          ;215 сек
            lcall       T_UST
            movlw       .232          ;216 сек
            lcall       T_UST
            movlw       .234          ;217 сек
            lcall       T_UST
            movlw       .236          ;218 сек
            lcall       T_UST
            movlw       .238          ;219 сек
            lcall       T_UST
            movlw       .240          ;220 сек
            lcall       T_UST
            movlw       .240          ;221 сек
            lcall       T_UST
            movlw       .240          ;222 сек
            lcall       T_UST
            movlw       .240          ;223 сек
            lcall       T_UST
            movlw       .240          ;224 сек
            lcall       T_UST
            movlw       .240          ;225 сек
            lcall       T_UST
            movlw       .240          ;226 сек
            lcall       T_UST
            movlw       .240          ;227 сек
            lcall       T_UST
            movlw       .240          ;228 сек
            lcall       T_UST
            movlw       .240          ;229 сек
            lcall       T_UST
            lcall       BEEEP         ; длинный звуковой сигнал
            movlw       .240          ;230 сек
            lcall       T_UST
            movlw       .240          ;231 сек
            lcall       T_UST
            movlw       .240          ;232 сек
            lcall       T_UST
            movlw       .240          ;233 сек
            lcall       T_UST
            movlw       .240          ;234 сек
            lcall       T_UST
            movlw       .237          ;235 сек
            lcall       T_UST
            movlw       .234          ;236 сек
            lcall       T_UST
            movlw       .231          ;237 сек
            lcall       T_UST
            movlw       .228          ;238 сек
            lcall       T_UST
            movlw       .225          ;239 сек
            lcall       T_UST
            movlw       .222          ;240 сек
            lcall       T_UST
            lcall       OHLAZHDENIE_noPb ; охлаждение для Pb+ T=220-120"C
            lcall       OFFh          ; отключаем верхний нагреватель
            lgoto       Go            ; возврат в основной цикл программы 

T_PROFF_12 ; работа по 12 термопрофилю Tmax - 245 "C продолжительность 15 сек
            lcall       ress         ; подготовительные операции, расстановка символов
            lcall       PREDNAGREV_1 ; предварительный нагрев 1-120 сек T=30-150"C
            lcall       PREDNAGREV_2_noPb ; предварительный нагрев 2 для Pb- 120-210 сек T=150-220"C
            movlw       .222          ;211 сек
            lcall       T_UST
            movlw       .224          ;212 сек
            lcall       T_UST
            movlw       .226          ;213 сек
            lcall       T_UST
            movlw       .228          ;214 сек
            lcall       T_UST
            movlw       .230          ;215 сек
            lcall       T_UST
            movlw       .232          ;216 сек
            lcall       T_UST
            movlw       .234          ;217 сек
            lcall       T_UST
            movlw       .236          ;218 сек
            lcall       T_UST
            movlw       .238          ;219 сек
            lcall       T_UST
            movlw       .240          ;220 сек
            lcall       T_UST
            movlw       .242          ;221 сек
            lcall       T_UST
            movlw       .244          ;222 сек
            lcall       T_UST
            movlw       .245          ;223 сек
            lcall       T_UST
            movlw       .245          ;224 сек
            lcall       T_UST
            movlw       .245          ;225 сек
            lcall       T_UST
            movlw       .245          ;226 сек
            lcall       T_UST
            movlw       .245          ;227 сек
            lcall       T_UST
            movlw       .245          ;228 сек
            lcall       T_UST
            movlw       .245          ;229 сек
            lcall       T_UST
            movlw       .245          ;230 сек
            lcall       T_UST
            movlw       .245          ;231 сек
            lcall       T_UST
            movlw       .245          ;232 сек
            lcall       T_UST
            lcall       BEEEP         ; длинный звуковой сигнал
            movlw       .245          ;233 сек
            lcall       T_UST
            movlw       .245          ;234 сек
            lcall       T_UST
            movlw       .245          ;235 сек
            lcall       T_UST
            movlw       .245          ;236 сек
            lcall       T_UST
            movlw       .245          ;237 сек
            lcall       T_UST
            movlw       .242          ;238 сек
            lcall       T_UST
            movlw       .239          ;239 сек
            lcall       T_UST
            movlw       .236          ;240 сек
            lcall       T_UST
            movlw       .233          ;241 сек
            lcall       T_UST
            movlw       .230          ;242 сек
            lcall       T_UST
            movlw       .227          ;243 сек
            lcall       T_UST
            movlw       .224          ;244 сек
            lcall       T_UST
            movlw       .221          ;245 сек
            lcall       T_UST
            lcall       OHLAZHDENIE_noPb ; охлаждение для Pb+ T=220-120"C
            lcall       OFFh          ; отключаем верхний нагреватель
            lgoto       Go            ; возврат в основной цикл программы 

T_PROFF_13 ; работа по 13 термопрофилю Tmax - 250 "C продолжительность 15 сек
            lcall       ress         ; подготовительные операции, расстановка символов
            lcall       PREDNAGREV_1 ; предварительный нагрев 1-120 сек T=30-150"C
            lcall       PREDNAGREV_2_noPb ; предварительный нагрев 2 для Pb- 120-210 сек T=150-220"C
            movlw       .222          ;211 сек
            lcall       T_UST
            movlw       .224          ;212 сек
            lcall       T_UST
            movlw       .226          ;213 сек
            lcall       T_UST
            movlw       .228          ;214 сек
            lcall       T_UST
            movlw       .230          ;215 сек
            lcall       T_UST
            movlw       .232          ;216 сек
            lcall       T_UST
            movlw       .234          ;217 сек
            lcall       T_UST
            movlw       .236          ;218 сек
            lcall       T_UST
            movlw       .238          ;219 сек
            lcall       T_UST
            movlw       .240          ;220 сек
            lcall       T_UST
            movlw       .242          ;221 сек
            lcall       T_UST
            movlw       .244          ;222 сек
            lcall       T_UST
            movlw       .246          ;223 сек
            lcall       T_UST
            movlw       .248          ;224 сек
            lcall       T_UST
            movlw       .250          ;225 сек
            lcall       T_UST
            movlw       .250          ;226 сек
            lcall       T_UST
            movlw       .250          ;227 сек
            lcall       T_UST
            movlw       .250          ;228 сек
            lcall       T_UST
            movlw       .250          ;229 сек
            lcall       T_UST
            movlw       .250          ;230 сек
            lcall       T_UST
            movlw       .250          ;231 сек
            lcall       T_UST
            movlw       .250          ;232 сек
            lcall       T_UST
            movlw       .250          ;233 сек
            lcall       T_UST
            movlw       .250          ;234 сек
            lcall       T_UST
            lcall       BEEEP         ; длинный звуковой сигнал
            movlw       .250          ;235 сек
            lcall       T_UST
            movlw       .250          ;236 сек
            lcall       T_UST
            movlw       .250          ;237 сек
            lcall       T_UST
            movlw       .250          ;238 сек
            lcall       T_UST
            movlw       .250          ;239 сек
            lcall       T_UST
            movlw       .247          ;240 сек
            lcall       T_UST
            movlw       .244          ;241 сек
            lcall       T_UST
            movlw       .241          ;242 сек
            lcall       T_UST
            movlw       .238          ;243 сек
            lcall       T_UST
            movlw       .235          ;244 сек
            lcall       T_UST
            movlw       .232          ;245 сек
            lcall       T_UST
            movlw       .229          ;246 сек
            lcall       T_UST
            movlw       .226          ;247 сек
            lcall       T_UST
            movlw       .223          ;248 сек
            lcall       T_UST
            movlw       .220          ;247 сек
            lcall       T_UST
            lcall       OHLAZHDENIE_noPb ; охлаждение для Pb+ T=220-120"C
            lcall       OFFh          ; отключаем верхний нагреватель
            lgoto       Go            ; возврат в основной цикл программы 

;########################################################################################################################################################
; 3 Страница памяти программ
            org         0x1000        ; переход на 3 страницу памяти программ
            bsf         PCLATH, 4     ; выбор 3 страницы памяти программ
            bcf         PCLATH, 3     ; -//-

T_PROFF_14 ; работа по 14 термопрофилю Tmax - 255 "C продолжительность 15 сек
            lcall       ress         ; подготовительные операции, расстановка символов
            lcall       PREDNAGREV_1 ; предварительный нагрев 1-120 сек T=30-150"C
            lcall       PREDNAGREV_2_noPb ; предварительный нагрев 2 для Pb- 120-210 сек T=150-220"C
            movlw       .222          ;211 сек
            lcall       T_UST
            movlw       .224          ;212 сек
            lcall       T_UST
            movlw       .226          ;213 сек
            lcall       T_UST
            movlw       .228          ;214 сек
            lcall       T_UST
            movlw       .230          ;215 сек
            lcall       T_UST
            movlw       .232          ;216 сек
            lcall       T_UST
            movlw       .234          ;217 сек
            lcall       T_UST
            movlw       .236          ;218 сек
            lcall       T_UST
            movlw       .238          ;219 сек
            lcall       T_UST
            movlw       .240          ;220 сек
            lcall       T_UST
            movlw       .242          ;221 сек
            lcall       T_UST
            movlw       .244          ;222 сек
            lcall       T_UST
            movlw       .246          ;223 сек
            lcall       T_UST
            movlw       .248          ;224 сек
            lcall       T_UST
            movlw       .250          ;225 сек
            lcall       T_UST
            movlw       .252          ;226 сек
            lcall       T_UST
            movlw       .254          ;227 сек
            lcall       T_UST
            movlw       .255          ;228 сек
            lcall       T_UST
            movlw       .255          ;229 сек
            lcall       T_UST
            movlw       .255          ;230 сек
            lcall       T_UST
            movlw       .255          ;231 сек
            lcall       T_UST
            movlw       .255          ;232 сек
            lcall       T_UST
            movlw       .255          ;233 сек
            lcall       T_UST
            movlw       .255          ;234 сек
            lcall       T_UST
            movlw       .255          ;235 сек
            lcall       T_UST
            movlw       .255          ;236 сек
            lcall       T_UST
            movlw       .255          ;237 сек
            lcall       T_UST
            lcall       BEEEP         ; длинный звуковой сигнал
            movlw       .255          ;238 сек
            lcall       T_UST
            movlw       .255          ;239 сек
            lcall       T_UST
            movlw       .255          ;240 сек
            lcall       T_UST
            movlw       .255          ;241 сек
            lcall       T_UST
            movlw       .255          ;242 сек
            lcall       T_UST
            movlw       .252          ;243 сек
            lcall       T_UST
            movlw       .249          ;244 сек
            lcall       T_UST
            movlw       .246          ;245 сек
            lcall       T_UST
            movlw       .243          ;246 сек
            lcall       T_UST
            movlw       .240          ;247 сек
            lcall       T_UST
            movlw       .237          ;248 сек
            lcall       T_UST
            movlw       .234          ;249 сек
            lcall       T_UST
            movlw       .231          ;250 сек
            lcall       T_UST
            movlw       .229          ;251 сек
            lcall       T_UST
            movlw       .226          ;252 сек
            lcall       T_UST
            movlw       .223          ;253 сек
            lcall       T_UST
            movlw       .220          ;254 сек
            lcall       T_UST
            lcall       OHLAZHDENIE_noPb ; охлаждение для Pb+ T=220-120"C
            lcall       OFFh          ; отключаем верхний нагреватель
            lgoto       Go            ; возврат в основной цикл программы 

PREDNAGREV_1 ; предварительный нагрев 1 1-120 сек T=30-150"C
            movlw       .30           ;1 сек
            lcall       T_UST
            movlw       .32           ;2 сек
            lcall       T_UST
            movlw       .34           ;3 сек
            lcall       T_UST
            movlw       .36           ;4 сек
            lcall       T_UST
            movlw       .38           ;5 сек
            lcall       T_UST
            movlw       .40           ;6 сек
            lcall       T_UST
            movlw       .42           ;7 сек
            lcall       T_UST
            movlw       .44           ;8 сек
            lcall       T_UST
            movlw       .46           ;9 сек
            lcall       T_UST
            movlw       .48           ;10 сек
            lcall       T_UST
            movlw       .50           ;11 сек
            lcall       T_UST
            movlw       .52           ;12 сек
            lcall       T_UST
            movlw       .54           ;13 сек
            lcall       T_UST
            movlw       .56           ;14 сек
            lcall       T_UST
            movlw       .58           ;15 сек
            lcall       T_UST
            movlw       .60           ;16 сек
            lcall       T_UST
            movlw       .62           ;17 сек
            lcall       T_UST
            movlw       .64           ;18 сек
            lcall       T_UST
            movlw       .66           ;19 сек
            lcall       T_UST
            movlw       .68           ;20 сек
            lcall       T_UST
            movlw       .70           ;21 сек
            lcall       T_UST
            movlw       .71           ;22 сек
            lcall       T_UST
            movlw       .72           ;23 сек
            lcall       T_UST
            movlw       .73           ;24 сек
            lcall       T_UST
            movlw       .74           ;25 сек
            lcall       T_UST
            movlw       .75           ;26 сек
            lcall       T_UST
            movlw       .76           ;27 сек
            lcall       T_UST
            movlw       .77           ;28 сек
            lcall       T_UST
            movlw       .78           ;29 сек
            lcall       T_UST
            movlw       .79           ;30 сек
            lcall       T_UST
            movlw       .80           ;31 сек
            lcall       T_UST
            movlw       .81           ;32 сек
            lcall       T_UST
            movlw       .82           ;33 сек
            lcall       T_UST
            movlw       .83           ;34 сек
            lcall       T_UST
            movlw       .84           ;35 сек
            lcall       T_UST
            movlw       .85           ;36 сек
            lcall       T_UST
            movlw       .86           ;37 сек
            lcall       T_UST
            movlw       .87           ;38 сек
            lcall       T_UST
            movlw       .88           ;39 сек
            lcall       T_UST
            movlw       .89           ;40 сек
            lcall       T_UST
            movlw       .90           ;41 сек
            lcall       T_UST
            movlw       .91           ;42 сек
            lcall       T_UST
            movlw       .92           ;43 сек
            lcall       T_UST
            movlw       .93           ;44 сек
            lcall       T_UST
            movlw       .94           ;45 сек
            lcall       T_UST
            movlw       .95           ;46 сек
            lcall       T_UST
            movlw       .96           ;47 сек
            lcall       T_UST
            movlw       .97           ;48 сек
            lcall       T_UST
            movlw       .98           ;49 сек
            lcall       T_UST
            movlw       .99           ;50 сек
            lcall       T_UST
            movlw       .100          ;51 сек
            lcall       T_UST
            movlw       .101          ;52 сек
            lcall       T_UST
            movlw       .102          ;53 сек
            lcall       T_UST
            movlw       .103          ;54 сек
            lcall       T_UST
            movlw       .104          ;55 сек
            lcall       T_UST
            movlw       .105          ;56 сек
            lcall       T_UST
            movlw       .106          ;57 сек
            lcall       T_UST
            movlw       .107          ;58 сек
            lcall       T_UST
            movlw       .108          ;59 сек
            lcall       T_UST
            movlw       .109          ;60 сек
            lcall       T_UST
            movlw       .111          ;61 сек
            lcall       T_UST
            movlw       .112          ;62 сек
            lcall       T_UST
            movlw       .113          ;63 сек
            lcall       T_UST
            movlw       .114          ;64 сек
            lcall       T_UST
            movlw       .115          ;65 сек
            lcall       T_UST
            movlw       .116          ;66 сек
            lcall       T_UST
            movlw       .117          ;67 сек
            lcall       T_UST
            movlw       .118          ;68 сек
            lcall       T_UST
            movlw       .119          ;69 сек
            lcall       T_UST
            movlw       .120          ;70 сек
            lcall       T_UST
            movlw       .121          ;71 сек
            lcall       T_UST
            movlw       .122          ;72 сек
            lcall       T_UST
            movlw       .123          ;73 сек
            lcall       T_UST
            movlw       .124          ;74 сек
            lcall       T_UST
            movlw       .125          ;75 сек
            lcall       T_UST
            movlw       .126          ;76 сек
            lcall       T_UST
            movlw       .127          ;77 сек
            lcall       T_UST
            movlw       .128          ;78 сек
            lcall       T_UST
            movlw       .129          ;79 сек
            lcall       T_UST
            movlw       .130          ;80 сек
            lcall       T_UST
            movlw       .131          ;81 сек
            lcall       T_UST
            movlw       .132          ;82 сек
            lcall       T_UST
            movlw       .133          ;83 сек
            lcall       T_UST
            movlw       .134          ;84 сек
            lcall       T_UST
            movlw       .135          ;85 сек
            lcall       T_UST
            movlw       .136          ;86 сек
            lcall       T_UST
            movlw       .137          ;87 сек
            lcall       T_UST
            movlw       .138          ;88 сек
            lcall       T_UST
            movlw       .139          ;89 сек
            lcall       T_UST
            movlw       .140          ;90 сек
            lcall       T_UST
            movlw       .140          ;91 сек
            lcall       T_UST
            movlw       .140          ;92 сек
            lcall       T_UST
            movlw       .141          ;93 сек
            lcall       T_UST
            movlw       .141          ;94 сек
            lcall       T_UST
            movlw       .141          ;95 сек
            lcall       T_UST
            movlw       .142          ;96 сек
            lcall       T_UST
            movlw       .142          ;97 сек
            lcall       T_UST
            movlw       .142          ;98 сек
            lcall       T_UST
            movlw       .143          ;99 сек
            lcall       T_UST
            movlw       .143          ;100 сек
            lcall       T_UST
            movlw       .143          ;101 сек
            lcall       T_UST
            movlw       .144          ;102 сек
            lcall       T_UST
            movlw       .144          ;103 сек
            lcall       T_UST
            movlw       .144          ;104 сек
            lcall       T_UST
            movlw       .145          ;105 сек
            lcall       T_UST
            movlw       .145          ;106 сек
            lcall       T_UST
            movlw       .145          ;107 сек
            lcall       T_UST
            movlw       .146          ;108 сек
            lcall       T_UST
            movlw       .146          ;109 сек
            lcall       T_UST
            movlw       .146          ;110 сек
            lcall       T_UST
            movlw       .147          ;111 сек
            lcall       T_UST
            movlw       .147          ;112 сек
            lcall       T_UST
            movlw       .147          ;113 сек
            lcall       T_UST
            movlw       .148          ;114 сек
            lcall       T_UST
            movlw       .148          ;115 сек
            lcall       T_UST
            movlw       .148          ;116 сек
            lcall       T_UST
            movlw       .149          ;117 сек
            lcall       T_UST
            movlw       .149          ;118 сек
            lcall       T_UST
            movlw       .149          ;119 сек
            lcall       T_UST
            movlw       .150          ;120 сек
            lcall       T_UST
            return
;--------------------------------------------------------------------------------------------------------------------------------------------------------
PREDNAGREV_2_Pb ; предварительный нагрев 2 для Pb+ 120-210 сек T=150-180"C
            movlw       .150          ;121 сек
            lcall       T_UST
            movlw       .150          ;122 сек
            lcall       T_UST
            movlw       .151          ;123 сек
            lcall       T_UST
            movlw       .151          ;124 сек
            lcall       T_UST
            movlw       .151          ;125 сек
            lcall       T_UST
            movlw       .152          ;126 сек
            lcall       T_UST
            movlw       .152          ;127 сек
            lcall       T_UST
            movlw       .152          ;128 сек
            lcall       T_UST
            movlw       .153          ;129 сек
            lcall       T_UST
            movlw       .153          ;130 сек
            lcall       T_UST
            movlw       .153          ;131 сек
            lcall       T_UST
            movlw       .154          ;132 сек
            lcall       T_UST
            movlw       .154          ;133 сек
            lcall       T_UST
            movlw       .154          ;134 сек
            lcall       T_UST
            movlw       .155          ;135 сек
            lcall       T_UST
            movlw       .155          ;136 сек
            lcall       T_UST
            movlw       .155          ;137 сек
            lcall       T_UST
            movlw       .156          ;138 сек
            lcall       T_UST
            movlw       .156          ;139 сек
            lcall       T_UST
            movlw       .156          ;140 сек
            lcall       T_UST
            movlw       .157          ;141 сек
            lcall       T_UST
            movlw       .157          ;142 сек
            lcall       T_UST
            movlw       .157          ;143 сек
            lcall       T_UST
            movlw       .158          ;144 сек
            lcall       T_UST
            movlw       .158          ;145 сек
            lcall       T_UST
            movlw       .158          ;146 сек
            lcall       T_UST
            movlw       .159          ;147 сек
            lcall       T_UST
            movlw       .159          ;148 сек
            lcall       T_UST
            movlw       .159          ;149 сек
            lcall       T_UST
            movlw       .160          ;150 сек
            lcall       T_UST
            movlw       .160          ;151 сек
            lcall       T_UST
            movlw       .160          ;152 сек
            lcall       T_UST
            movlw       .161          ;153 сек
            lcall       T_UST
            movlw       .161          ;154 сек
            lcall       T_UST
            movlw       .161          ;155 сек
            lcall       T_UST
            movlw       .162          ;156 сек
            lcall       T_UST
            movlw       .162          ;157 сек
            lcall       T_UST
            movlw       .162          ;158 сек
            lcall       T_UST
            movlw       .163          ;159 сек
            lcall       T_UST
            movlw       .163          ;160 сек
            lcall       T_UST
            movlw       .163          ;161 сек
            lcall       T_UST
            movlw       .164          ;162 сек
            lcall       T_UST
            movlw       .164          ;163 сек
            lcall       T_UST
            movlw       .164          ;164 сек
            lcall       T_UST
            movlw       .165          ;165 сек
            lcall       T_UST
            movlw       .165          ;166 сек
            lcall       T_UST
            movlw       .165          ;167 сек
            lcall       T_UST
            movlw       .166          ;168 сек
            lcall       T_UST
            movlw       .166          ;169 сек
            lcall       T_UST
            movlw       .166          ;170 сек
            lcall       T_UST
            movlw       .167          ;171 сек
            lcall       T_UST
            movlw       .167          ;172 сек
            lcall       T_UST
            movlw       .167          ;173 сек
            lcall       T_UST
            movlw       .168          ;174 сек
            lcall       T_UST
            movlw       .168          ;175 сек
            lcall       T_UST
            movlw       .168          ;176 сек
            lcall       T_UST
            movlw       .169          ;177 сек
            lcall       T_UST
            movlw       .169          ;178 сек
            lcall       T_UST
            movlw       .169          ;179 сек
            lcall       T_UST
            movlw       .170          ;180 сек
            lcall       T_UST
            movlw       .170          ;181 сек
            lcall       T_UST
            movlw       .170          ;182 сек
            lcall       T_UST
            movlw       .171          ;183 сек
            lcall       T_UST
            movlw       .171          ;184 сек
            lcall       T_UST
            movlw       .171          ;185 сек
            lcall       T_UST
            movlw       .172          ;186 сек
            lcall       T_UST
            movlw       .172          ;187 сек
            lcall       T_UST
            movlw       .172          ;188 сек
            lcall       T_UST
            movlw       .173          ;189 сек
            lcall       T_UST
            movlw       .173          ;190 сек
            lcall       T_UST
            movlw       .173          ;191 сек
            lcall       T_UST
            movlw       .174          ;192 сек
            lcall       T_UST
            movlw       .174          ;193 сек
            lcall       T_UST
            movlw       .174          ;194 сек
            lcall       T_UST
            movlw       .175          ;195 сек
            lcall       T_UST
            movlw       .175          ;196 сек
            lcall       T_UST
            movlw       .175          ;197 сек
            lcall       T_UST
            movlw       .176          ;198 сек
            lcall       T_UST
            movlw       .176          ;199 сек
            lcall       T_UST
            movlw       .176          ;200 сек
            lcall       T_UST
            movlw       .177          ;201 сек
            lcall       T_UST
            movlw       .177          ;202 сек
            lcall       T_UST
            movlw       .177          ;203 сек
            lcall       T_UST
            movlw       .178          ;204 сек
            lcall       T_UST
            movlw       .178          ;205 сек
            lcall       T_UST
            movlw       .178          ;206 сек
            lcall       T_UST
            movlw       .179          ;207 сек
            lcall       T_UST
            movlw       .179          ;208 сек
            lcall       T_UST
            movlw       .179          ;209 сек
            lcall       T_UST
            movlw       .180          ;210 сек
            lcall       T_UST
            return
;--------------------------------------------------------------------------------------------------------------------------------------------------------
PREDNAGREV_2_noPb ; предварительный нагрев 2 для Pb- 120-210 сек T=150-220"C
            movlw       .151          ;121 сек
            lcall       T_UST
            movlw       .152          ;122 сек
            lcall       T_UST
            movlw       .152          ;123 сек
            lcall       T_UST
            movlw       .153          ;124 сек
            lcall       T_UST
            movlw       .154          ;125 сек
            lcall       T_UST
            movlw       .155          ;126 сек
            lcall       T_UST
            movlw       .155          ;127 сек
            lcall       T_UST
            movlw       .156          ;128 сек
            lcall       T_UST
            movlw       .157          ;129 сек
            lcall       T_UST
            movlw       .158          ;130 сек
            lcall       T_UST
            movlw       .159          ;131 сек
            lcall       T_UST
            movlw       .160          ;132 сек
            lcall       T_UST
            movlw       .160          ;133 сек
            lcall       T_UST
            movlw       .161          ;134 сек
            lcall       T_UST
            movlw       .162          ;135 сек
            lcall       T_UST
            movlw       .162          ;136 сек
            lcall       T_UST
            movlw       .163          ;137 сек
            lcall       T_UST
            movlw       .164          ;138 сек
            lcall       T_UST
            movlw       .165          ;139 сек
            lcall       T_UST
            movlw       .166          ;140 сек
            lcall       T_UST
            movlw       .166          ;141 сек
            lcall       T_UST
            movlw       .167          ;142 сек
            lcall       T_UST
            movlw       .168          ;143 сек
            lcall       T_UST
            movlw       .169          ;144 сек
            lcall       T_UST
            movlw       .169          ;145 сек
            lcall       T_UST
            movlw       .170          ;146 сек
            lcall       T_UST
            movlw       .171          ;147 сек
            lcall       T_UST
            movlw       .172          ;148 сек
            lcall       T_UST
            movlw       .173          ;149 сек
            lcall       T_UST
            movlw       .173          ;150 сек
            lcall       T_UST
            movlw       .174          ;151 сек
            lcall       T_UST
            movlw       .175          ;152 сек
            lcall       T_UST
            movlw       .176          ;153 сек
            lcall       T_UST
            movlw       .176          ;154 сек
            lcall       T_UST
            movlw       .177          ;155 сек
            lcall       T_UST
            movlw       .178          ;156 сек
            lcall       T_UST
            movlw       .179          ;157 сек
            lcall       T_UST
            movlw       .180          ;158 сек
            lcall       T_UST
            movlw       .180          ;159 сек
            lcall       T_UST
            movlw       .181          ;160 сек
            lcall       T_UST
            movlw       .182          ;161 сек
            lcall       T_UST
            movlw       .183          ;162 сек
            lcall       T_UST
            movlw       .183          ;163 сек
            lcall       T_UST
            movlw       .184          ;164 сек
            lcall       T_UST
            movlw       .185          ;165 сек
            lcall       T_UST
            movlw       .186          ;166 сек
            lcall       T_UST
            movlw       .187          ;167 сек
            lcall       T_UST
            movlw       .187          ;168 сек
            lcall       T_UST
            movlw       .188          ;169 сек
            lcall       T_UST
            movlw       .189          ;170 сек
            lcall       T_UST
            movlw       .190          ;171 сек
            lcall       T_UST
            movlw       .190          ;172 сек
            lcall       T_UST
            movlw       .191          ;173 сек
            lcall       T_UST
            movlw       .192          ;174 сек
            lcall       T_UST
            movlw       .193          ;175 сек
            lcall       T_UST
            movlw       .194          ;176 сек
            lcall       T_UST
            movlw       .194          ;177 сек
            lcall       T_UST
            movlw       .195          ;178 сек
            lcall       T_UST
            movlw       .196          ;179 сек
            lcall       T_UST
            movlw       .197          ;180 сек
            lcall       T_UST
            movlw       .197          ;181 сек
            lcall       T_UST
            movlw       .198          ;182 сек
            lcall       T_UST
            movlw       .199          ;183 сек
            lcall       T_UST
            movlw       .200          ;184 сек
            lcall       T_UST
            movlw       .201          ;185 сек
            lcall       T_UST
            movlw       .201          ;186 сек
            lcall       T_UST
            movlw       .202          ;187 сек
            lcall       T_UST
            movlw       .203          ;188 сек
            lcall       T_UST
            movlw       .204          ;189 сек
            lcall       T_UST
            movlw       .204          ;190 сек
            lcall       T_UST
            movlw       .205          ;191 сек
            lcall       T_UST
            movlw       .206          ;192 сек
            lcall       T_UST
            movlw       .207          ;193 сек
            lcall       T_UST
            movlw       .208          ;194 сек
            lcall       T_UST
            movlw       .208          ;195 сек
            lcall       T_UST
            movlw       .209          ;196 сек
            lcall       T_UST
            movlw       .210          ;197 сек
            lcall       T_UST
            movlw       .211          ;198 сек
            lcall       T_UST
            movlw       .211          ;199 сек
            lcall       T_UST
            movlw       .212          ;200 сек
            lcall       T_UST
            movlw       .213          ;201 сек
            lcall       T_UST
            movlw       .214          ;202 сек
            lcall       T_UST
            movlw       .215          ;203 сек
            lcall       T_UST
            movlw       .215          ;204 сек
            lcall       T_UST
            movlw       .216          ;205 сек
            lcall       T_UST
            movlw       .217          ;206 сек
            lcall       T_UST
            movlw       .218          ;207 сек
            lcall       T_UST
            movlw       .218          ;208 сек
            lcall       T_UST
            movlw       .219          ;209 сек
            lcall       T_UST
            movlw       .220          ;210 сек
            lcall       T_UST
            return
;--------------------------------------------------------------------------------------------------------------------------------------------------------
PREDNAGREV_3_noPb ; предварительный нагрев 3 для Pb- 120-193 сек T=150-220"C
            movlw       .151          ;121 сек
            lcall       T_UST
            movlw       .152          ;122 сек
            lcall       T_UST
            movlw       .152          ;123 сек
            lcall       T_UST
            movlw       .153          ;124 сек
            lcall       T_UST
            movlw       .154          ;125 сек
            lcall       T_UST
            movlw       .155          ;126 сек
            lcall       T_UST
            movlw       .155          ;127 сек
            lcall       T_UST
            movlw       .156          ;128 сек
            lcall       T_UST
            movlw       .157          ;129 сек
            lcall       T_UST
            movlw       .158          ;130 сек
            lcall       T_UST
            movlw       .159          ;131 сек
            lcall       T_UST
            movlw       .160          ;132 сек
            lcall       T_UST
            movlw       .160          ;133 сек
            lcall       T_UST
            movlw       .161          ;134 сек
            lcall       T_UST
            movlw       .162          ;135 сек
            lcall       T_UST
            movlw       .162          ;136 сек
            lcall       T_UST
            movlw       .163          ;137 сек
            lcall       T_UST
            movlw       .164          ;138 сек
            lcall       T_UST
            movlw       .165          ;139 сек
            lcall       T_UST
            movlw       .166          ;140 сек
            lcall       T_UST
            movlw       .166          ;141 сек
            lcall       T_UST
            movlw       .167          ;142 сек
            lcall       T_UST
            movlw       .168          ;143 сек
            lcall       T_UST
            movlw       .169          ;144 сек
            lcall       T_UST
            movlw       .169          ;145 сек
            lcall       T_UST
            movlw       .170          ;146 сек
            lcall       T_UST
            movlw       .171          ;147 сек
            lcall       T_UST
            movlw       .172          ;148 сек
            lcall       T_UST
            movlw       .173          ;149 сек
            lcall       T_UST
            movlw       .173          ;150 сек
            lcall       T_UST
            movlw       .174          ;151 сек
            lcall       T_UST
            movlw       .175          ;152 сек
            lcall       T_UST
            movlw       .176          ;153 сек
            lcall       T_UST
            movlw       .176          ;154 сек
            lcall       T_UST
            movlw       .177          ;155 сек
            lcall       T_UST
            movlw       .178          ;156 сек
            lcall       T_UST
            movlw       .179          ;157 сек
            lcall       T_UST
            movlw       .180          ;158 сек
            lcall       T_UST
            movlw       .180          ;159 сек
            lcall       T_UST
            movlw       .181          ;160 сек
            lcall       T_UST
            movlw       .182          ;161 сек
            lcall       T_UST
            movlw       .183          ;162 сек
            lcall       T_UST
            movlw       .183          ;163 сек
            lcall       T_UST
            movlw       .184          ;164 сек
            lcall       T_UST
            movlw       .185          ;165 сек
            lcall       T_UST
            movlw       .186          ;166 сек
            lcall       T_UST
            movlw       .187          ;167 сек
            lcall       T_UST
            movlw       .187          ;168 сек
            lcall       T_UST
            movlw       .188          ;169 сек
            lcall       T_UST
            movlw       .189          ;170 сек
            lcall       T_UST
            movlw       .190          ;171 сек
            lcall       T_UST
            movlw       .190          ;172 сек
            lcall       T_UST
            movlw       .191          ;173 сек
            lcall       T_UST
            movlw       .192          ;174 сек
            lcall       T_UST
            movlw       .193          ;175 сек
            lcall       T_UST
            movlw       .194          ;176 сек
            lcall       T_UST
            movlw       .194          ;177 сек
            lcall       T_UST
            movlw       .195          ;178 сек
            lcall       T_UST
            movlw       .196          ;179 сек
            lcall       T_UST
            movlw       .197          ;180 сек
            lcall       T_UST
            movlw       .198          ;181 сек
            lcall       T_UST
            movlw       .199          ;182 сек
            lcall       T_UST
            movlw       .200          ;183 сек
            lcall       T_UST
            movlw       .202          ;184 сек
            lcall       T_UST
            movlw       .204          ;185 сек
            lcall       T_UST
            movlw       .206          ;186 сек
            lcall       T_UST
            movlw       .208          ;187 сек
            lcall       T_UST
            movlw       .210          ;188 сек
            lcall       T_UST
            movlw       .212          ;189 сек
            lcall       T_UST
            movlw       .214          ;190 сек
            lcall       T_UST
            movlw       .216          ;191 сек
            lcall       T_UST
            movlw       .218          ;192 сек
            lcall       T_UST
            movlw       .220          ;193 сек
            lcall       T_UST
            return

;--------------------------------------------------------------------------------------------------------------------------------------------------------
OHLAZHDENIE_Pb ; охлаждение для Pb+ T=180-120"C
            movlw       .177         
            lcall       T_UST
            movlw       .174         
            lcall       T_UST
            movlw       .171         
            lcall       T_UST
            movlw       .168         
            lcall       T_UST
            movlw       .165         
            lcall       T_UST
            movlw       .162         
            lcall       T_UST
            movlw       .159         
            lcall       T_UST
            movlw       .156         
            lcall       T_UST
            movlw       .153         
            lcall       T_UST
            movlw       .150         
            lcall       T_UST
            movlw       .147         
            lcall       T_UST
            movlw       .144         
            lcall       T_UST
            movlw       .141         
            lcall       T_UST
            movlw       .138         
            lcall       T_UST
            movlw       .135         
            lcall       T_UST
            movlw       .132         
            lcall       T_UST
            movlw       .129         
            lcall       T_UST
            movlw       .126         
            lcall       T_UST
            movlw       .123         
            lcall       T_UST
            movlw       .120         
            lcall       T_UST
            return

;--------------------------------------------------------------------------------------------------------------------------------------------------------
OHLAZHDENIE_noPb ; охлаждение для Pb- T=220-120"C
            movlw       .217         
            lcall       T_UST
            movlw       .214         
            lcall       T_UST
            movlw       .211         
            lcall       T_UST
            movlw       .208         
            lcall       T_UST
            movlw       .205         
            lcall       T_UST
            movlw       .202         
            lcall       T_UST
            movlw       .199         
            lcall       T_UST
            movlw       .196         
            lcall       T_UST
            movlw       .193         
            lcall       T_UST
            movlw       .190         
            lcall       T_UST
            movlw       .187         
            lcall       T_UST
            movlw       .184         
            lcall       T_UST
            movlw       .181         
            lcall       T_UST
            movlw       .178         
            lcall       T_UST
            movlw       .175         
            lcall       T_UST
            movlw       .172         
            lcall       T_UST
            movlw       .169         
            lcall       T_UST
            movlw       .166         
            lcall       T_UST
            movlw       .163         
            lcall       T_UST
            movlw       .160         
            lcall       T_UST
            movlw       .157         
            lcall       T_UST
            movlw       .154         
            lcall       T_UST
            movlw       .151         
            lcall       T_UST
            movlw       .148         
            lcall       T_UST
            movlw       .145         
            lcall       T_UST
            movlw       .142         
            lcall       T_UST
            movlw       .139         
            lcall       T_UST
            movlw       .136         
            lcall       T_UST
            movlw       .133         
            lcall       T_UST
            movlw       .130         
            lcall       T_UST
            movlw       .127         
            lcall       T_UST
            movlw       .124         
            lcall       T_UST
            movlw       .120         
            lcall       T_UST
            return

            end